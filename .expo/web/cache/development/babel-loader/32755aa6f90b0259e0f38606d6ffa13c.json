{"ast":null,"code":"import * as React from 'react';\nimport { Settings, ProductGridView, FoodList } from \"../screens\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { fontSizes, colors } from \"../constants\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaView } from 'react-navigation';\nimport Profile from \"../screens/Profile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar screenOptions = function screenOptions(_ref) {\n  var route = _ref.route;\n  return {\n    headerShown: false,\n    tabBarActiveTintColor: 'white',\n    tabBarInActiveTintColor: colors.inactive,\n    tabBarActiveBackgroundColor: colors.primary,\n    tabBarInActiveBackgroundColor: colors.primary,\n    tabBarBackground: function tabBarBackground() {\n      return _jsx(View, {\n        style: {\n          backgroundColor: colors.primary,\n          flex: 1\n        }\n      });\n    },\n    tabBarIcon: function tabBarIcon(_ref2) {\n      var focused = _ref2.focused,\n          color = _ref2.color,\n          size = _ref2.size;\n      var screenName = route.name;\n      return _jsx(Icon, {\n        style: {\n          paddingTop: 10\n        },\n        name: route.name == \"ProductGridView\" ? \"align-center\" : route.name == \"FoodList\" ? \"accusoft\" : route.name == \"Settings\" ? \"cogs\" : route.name == \"Profile\" ? \"user\" : route.name == \"Chat\" ? \"comment-dots\" : \"\",\n        size: 20,\n        color: focused ? 'white' : colors.inactive\n      });\n    }\n  };\n};\n\nfunction UITab(_ref3) {\n  var route = _ref3.route;\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    forceInset: {\n      bottom: 'never'\n    },\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: 'ProductGridView',\n      screenOptions: screenOptions,\n      children: [_jsx(Tab.Screen, {\n        name: 'ProductGridView',\n        component: ProductGridView,\n        options: {\n          tabBarLabel: 'Products',\n          tabBarLabelStyle: {\n            fontSize: fontSizes.h5\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: 'FoodList',\n        component: FoodList,\n        options: {\n          tabBarLabel: 'Foods',\n          tabBarLabelStyle: {\n            fontSize: fontSizes.h5\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: 'Settings',\n        component: Settings,\n        options: {\n          tabBarLabel: 'Settings',\n          tabBarLabelStyle: {\n            fontSize: fontSizes.h5\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: 'Profile',\n        component: Profile,\n        options: {\n          tabBarLabel: 'Profile',\n          tabBarLabelStyle: {\n            fontSize: fontSizes.h5\n          }\n        }\n      })]\n    })\n  });\n}\n\nexport default UITab;","map":{"version":3,"names":["React","Settings","ProductGridView","FoodList","createBottomTabNavigator","fontSizes","colors","Icon","SafeAreaView","Profile","Tab","screenOptions","route","headerShown","tabBarActiveTintColor","tabBarInActiveTintColor","inactive","tabBarActiveBackgroundColor","primary","tabBarInActiveBackgroundColor","tabBarBackground","backgroundColor","flex","tabBarIcon","focused","color","size","screenName","name","paddingTop","UITab","bottom","tabBarLabel","tabBarLabelStyle","fontSize","h5"],"sources":["D:/React/react-native-project/training-app/navigation/UITab.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Settings, ProductGridView, FoodList } from '../screens';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { fontSizes, colors } from '../constants';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nimport { View } from 'react-native';\r\nimport { SafeAreaView } from 'react-navigation';\r\nimport Profile from '../screens/Profile';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst screenOptions = ({ route }: any) => ({\r\n    headerShown: false,\r\n    tabBarActiveTintColor: 'white',\r\n    tabBarInActiveTintColor: colors.inactive,\r\n    tabBarActiveBackgroundColor: colors.primary,\r\n    tabBarInActiveBackgroundColor: colors.primary,\r\n    tabBarBackground: () => {\r\n        return <View\r\n            style={{\r\n                backgroundColor: colors.primary,\r\n                flex: 1\r\n            }}\r\n        >\r\n        </View>\r\n    },\r\n    tabBarIcon: ({ focused, color, size }) => {\r\n        let screenName = route.name;\r\n        return <Icon\r\n            style={{\r\n                paddingTop: 10\r\n            }}\r\n            name={route.name == \"ProductGridView\" ? \"align-center\" :\r\n                (route.name == \"FoodList\" ? \"accusoft\" : (\r\n                    route.name == \"Settings\" ? \"cogs\" :\r\n                        (route.name == \"Profile\" ? \"user\" :\r\n                            (route.name == \"Chat\" ? \"comment-dots\" : \"\"))\r\n                ))}\r\n            size={20}\r\n            color={focused ? 'white' : colors.inactive} />\r\n    }\r\n})\r\n\r\n\r\nfunction UITab({ route }: any) {\r\n    return (\r\n        <SafeAreaView\r\n            style={{\r\n                flex: 1\r\n            }}\r\n            forceInset={{ bottom: 'never' }}\r\n        >\r\n            <Tab.Navigator initialRouteName={'ProductGridView'} screenOptions={screenOptions}>\r\n                <Tab.Screen\r\n                    name={'ProductGridView'}\r\n                    component={ProductGridView}\r\n                    options={{\r\n                        tabBarLabel: 'Products',\r\n                        tabBarLabelStyle: {\r\n                            fontSize: fontSizes.h5\r\n                        }\r\n                    }}\r\n                />\r\n                <Tab.Screen\r\n                    name={'FoodList'}\r\n                    component={FoodList}\r\n                    options={{\r\n                        tabBarLabel: 'Foods',\r\n                        tabBarLabelStyle: {\r\n                            fontSize: fontSizes.h5\r\n                        }\r\n                    }}\r\n                />\r\n                <Tab.Screen\r\n                    name={'Settings'}\r\n                    component={Settings}\r\n                    options={{\r\n                        tabBarLabel: 'Settings',\r\n                        tabBarLabelStyle: {\r\n                            fontSize: fontSizes.h5\r\n                        }\r\n                    }}\r\n                />\r\n                <Tab.Screen\r\n                    name={'Profile'}\r\n                    component={Profile}\r\n                    options={{\r\n                        tabBarLabel: 'Profile',\r\n                        tabBarLabelStyle: {\r\n                            fontSize: fontSizes.h5\r\n                        }\r\n                    }}\r\n                />\r\n            </Tab.Navigator>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default UITab;"],"mappings":"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"},"metadata":{},"sourceType":"module"}