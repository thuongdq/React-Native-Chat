{"ast":null,"code":"import * as React from 'react';\nimport { Settings, ProductGridView, FoodList } from \"../screens\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { colors } from \"../constants\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar screenOptions = function screenOptions(_ref) {\n  var route = _ref.route;\n  return {\n    headerShown: false,\n    tabBarActiveTintColor: 'white',\n    tabBarInActiveTintColor: colors.inactive,\n    tabBarActiveBackgroundColor: colors.primary,\n    tabBarInActiveBackgroundColor: colors.primary,\n    tabBarIcon: function tabBarIcon(_ref2) {\n      var focused = _ref2.focused,\n          color = _ref2.color,\n          size = _ref2.size;\n      var screenName = route.name;\n      return _jsx(Icon, {\n        name: route.name == \"ProductGridView\" ? \"align-center\" : route.name == \"FoodList\" ? \"accusoft\" : route.name == \"Settings\" ? \"cogs\" : route.name == \"Profile\" ? \"user\" : route.name == \"Chat\" ? \"comment-dots\" : \"\",\n        size: 20,\n        color: focused ? 'white' : colors.inactive\n      });\n    }\n  };\n};\n\nfunction UITab(_ref3) {\n  var route = _ref3.route;\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: 'ProductGridView',\n    screenOptions: screenOptions,\n    children: [_jsx(Tab.Screen, {\n      name: 'ProductGridView',\n      component: ProductGridView,\n      options: {\n        tabBarLabel: 'Products'\n      }\n    }), _jsx(Tab.Screen, {\n      name: 'FoodList',\n      component: FoodList,\n      options: {\n        tabBarLabel: 'Foods'\n      }\n    }), _jsx(Tab.Screen, {\n      name: 'Settings',\n      component: Settings\n    })]\n  });\n}\n\nexport default UITab;","map":{"version":3,"names":["React","Settings","ProductGridView","FoodList","createBottomTabNavigator","colors","Icon","Tab","screenOptions","route","headerShown","tabBarActiveTintColor","tabBarInActiveTintColor","inactive","tabBarActiveBackgroundColor","primary","tabBarInActiveBackgroundColor","tabBarIcon","focused","color","size","screenName","name","UITab","tabBarLabel"],"sources":["D:/React/react-native-project/training-app/navigation/UITab.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Settings, ProductGridView, FoodList } from '../screens';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { fontSizes, colors } from '../constants';\r\nimport { View } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst screenOptions = ({ route }: any) => ({\r\n    headerShown: false,\r\n    tabBarActiveTintColor: 'white',\r\n    tabBarInActiveTintColor: colors.inactive,\r\n    tabBarActiveBackgroundColor: colors.primary,\r\n    tabBarInActiveBackgroundColor: colors.primary,\r\n    tabBarIcon: ({ focused, color, size }) => {\r\n        let screenName = route.name;\r\n        return <Icon\r\n            name={route.name == \"ProductGridView\" ? \"align-center\" :\r\n                (route.name == \"FoodList\" ? \"accusoft\" : (\r\n                    route.name == \"Settings\" ? \"cogs\" :\r\n                        (route.name == \"Profile\" ? \"user\" :\r\n                            (route.name == \"Chat\" ? \"comment-dots\" : \"\"))\r\n                ))}\r\n            size={20}\r\n            color={focused ? 'white' : colors.inactive} />\r\n    }\r\n})\r\n\r\n\r\nfunction UITab({ route }: any) {\r\n    return (\r\n        <Tab.Navigator initialRouteName={'ProductGridView'} screenOptions={screenOptions}>\r\n            <Tab.Screen\r\n                name={'ProductGridView'}\r\n                component={ProductGridView}\r\n                options={{\r\n                    tabBarLabel: 'Products'\r\n                }}\r\n            />\r\n            <Tab.Screen\r\n                name={'FoodList'}\r\n                component={FoodList}\r\n                options={{\r\n                    tabBarLabel: 'Foods'\r\n                }}\r\n            />\r\n            <Tab.Screen\r\n                name={'Settings'}\r\n                component={Settings}\r\n            />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\nexport default UITab;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,QAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAoBC,MAApB;AAEA,OAAOC,IAAP;;;AAEA,IAAMC,GAAG,GAAGH,wBAAwB,EAApC;;AACA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB;EAAA,IAAGC,KAAH,QAAGA,KAAH;EAAA,OAAqB;IACvCC,WAAW,EAAE,KAD0B;IAEvCC,qBAAqB,EAAE,OAFgB;IAGvCC,uBAAuB,EAAEP,MAAM,CAACQ,QAHO;IAIvCC,2BAA2B,EAAET,MAAM,CAACU,OAJG;IAKvCC,6BAA6B,EAAEX,MAAM,CAACU,OALC;IAMvCE,UAAU,EAAE,2BAA8B;MAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;MAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;MAAA,IAAXC,IAAW,SAAXA,IAAW;MACtC,IAAIC,UAAU,GAAGZ,KAAK,CAACa,IAAvB;MACA,OAAO,KAAC,IAAD;QACH,IAAI,EAAEb,KAAK,CAACa,IAAN,IAAc,iBAAd,GAAkC,cAAlC,GACDb,KAAK,CAACa,IAAN,IAAc,UAAd,GAA2B,UAA3B,GACGb,KAAK,CAACa,IAAN,IAAc,UAAd,GAA2B,MAA3B,GACKb,KAAK,CAACa,IAAN,IAAc,SAAd,GAA0B,MAA1B,GACIb,KAAK,CAACa,IAAN,IAAc,MAAd,GAAuB,cAAvB,GAAwC,EALtD;QAOH,IAAI,EAAE,EAPH;QAQH,KAAK,EAAEJ,OAAO,GAAG,OAAH,GAAab,MAAM,CAACQ;MAR/B,EAAP;IASH;EAjBsC,CAArB;AAAA,CAAtB;;AAqBA,SAASU,KAAT,QAA+B;EAAA,IAAdd,KAAc,SAAdA,KAAc;EAC3B,OACI,MAAC,GAAD,CAAK,SAAL;IAAe,gBAAgB,EAAE,iBAAjC;IAAoD,aAAa,EAAED,aAAnE;IAAA,WACI,KAAC,GAAD,CAAK,MAAL;MACI,IAAI,EAAE,iBADV;MAEI,SAAS,EAAEN,eAFf;MAGI,OAAO,EAAE;QACLsB,WAAW,EAAE;MADR;IAHb,EADJ,EAQI,KAAC,GAAD,CAAK,MAAL;MACI,IAAI,EAAE,UADV;MAEI,SAAS,EAAErB,QAFf;MAGI,OAAO,EAAE;QACLqB,WAAW,EAAE;MADR;IAHb,EARJ,EAeI,KAAC,GAAD,CAAK,MAAL;MACI,IAAI,EAAE,UADV;MAEI,SAAS,EAAEvB;IAFf,EAfJ;EAAA,EADJ;AAsBH;;AAED,eAAesB,KAAf"},"metadata":{},"sourceType":"module"}