{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { colors, fontSizes, dataProducts } from \"../../constants\";\nimport FiveStars from \"./FiveStars\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ProductGridView(props) {\n  var _useState = useState(dataProducts.products),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    children: _jsx(FlatList, {\n      style: {\n        marginTop: 5\n      },\n      keyExtractor: function keyExtractor(eachProduct) {\n        return eachProduct.productName;\n      },\n      data: products,\n      numColumns: 2,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsxs(View, {\n          style: {\n            flex: 0.5,\n            marginLeft: index % 2 == 0 ? 10 : 0,\n            marginRight: 10,\n            marginTop: 5,\n            marginBottom: 5,\n            borderRadius: 20,\n            borderWidth: 1,\n            borderColor: colors.inactive\n          },\n          children: [_jsxs(View, {\n            style: {\n              marginTop: 10,\n              flexDirection: 'row'\n            },\n            children: [_jsx(Image, {\n              style: {\n                width: 90,\n                height: 100,\n                resizeMode: 'cover',\n                borderRadius: 20,\n                marginRight: 15\n              },\n              source: {\n                uri: item.url\n              }\n            }), _jsxs(Text, {\n              style: {\n                color: 'black',\n                fontSize: fontSizes.h3,\n                flex: 1,\n                textAlign: 'right'\n              },\n              children: [\"$ \", item.price]\n            })]\n          }), _jsx(Text, {\n            style: {\n              color: colors.primary,\n              fontWeight: 'bold',\n              fontSize: fontSizes.h5,\n              marginHorizontal: 10,\n              marginTop: 5\n            },\n            children: item.productName\n          }), item.specifications.map(function (specification, index) {\n            return _jsxs(Text, {\n              style: {\n                color: 'black',\n                fontSize: fontSizes.h6,\n                paddingHorizontal: 5,\n                paddingBottom: 10\n              },\n              children: [\"* \", specification]\n            }, index);\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              padding: 10\n            },\n            children: [_jsxs(TouchableOpacity, {\n              style: {\n                flexDirection: 'row'\n              },\n              onPress: function onPress() {\n                var cloneProducts = products.map(function (eachProduct) {\n                  if (item.productName == eachProduct.productName) {\n                    return _objectSpread(_objectSpread({}, eachProduct), {}, {\n                      isSaved: eachProduct.isSaved == undefined || eachProduct.isSaved == false ? true : false\n                    });\n                  }\n\n                  return eachProduct;\n                });\n                setProducts(cloneProducts);\n              },\n              children: [_jsx(Icon, {\n                name: \"heart\",\n                size: 22,\n                color: item.isSaved == undefined || item.isSaved == false ? colors.inactive : 'red',\n                style: {\n                  marginEnd: 5\n                }\n              }), _jsx(Text, {\n                style: {\n                  color: 'red',\n                  fontSize: fontSizes.h6 * 0.8,\n                  width: 50\n                },\n                children: \"Saved for later\"\n              })]\n            }), _jsxs(View, {\n              style: {\n                flex: 1\n              },\n              children: [_jsx(FiveStars, {\n                numberOfStars: item.stars\n              }), _jsxs(Text, {\n                style: {\n                  color: 'blue',\n                  fontSize: fontSizes.h6 * 0.8,\n                  textAlign: 'right',\n                  paddingTop: 3\n                },\n                children: [item.reviews, \" reviews\"]\n              })]\n            })]\n          })]\n        }, index);\n      }\n    })\n  });\n}\n\nexport default ProductGridView;","map":{"version":3,"names":["React","useState","Icon","colors","fontSizes","dataProducts","FiveStars","ProductGridView","props","products","setProducts","flex","backgroundColor","marginTop","eachProduct","productName","item","index","marginLeft","marginRight","marginBottom","borderRadius","borderWidth","borderColor","inactive","flexDirection","width","height","resizeMode","uri","url","color","fontSize","h3","textAlign","price","primary","fontWeight","h5","marginHorizontal","specifications","map","specification","h6","paddingHorizontal","paddingBottom","padding","cloneProducts","isSaved","undefined","marginEnd","stars","paddingTop","reviews"],"sources":["D:/React/react-native-project/training-app/screens/ProductGrid/ProductGridView.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    Image,\r\n    FlatList,\r\n    TouchableOpacity\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nimport { colors, fontSizes, dataProducts } from '../../constants';\r\nimport FiveStars from './FiveStars';\r\n\r\nfunction ProductGridView(props: any) {\r\n    const [products, setProducts] = useState(dataProducts.products);\r\n    return (\r\n        <View\r\n            style={{\r\n                flex: 1,\r\n                backgroundColor: 'white'\r\n            }}\r\n        >\r\n            <FlatList\r\n                style={{ marginTop: 5 }}\r\n                keyExtractor={(eachProduct) => eachProduct.productName}\r\n                data={products}\r\n                numColumns={2}\r\n                renderItem={({ item, index }) => {\r\n                    return (\r\n                        <View\r\n                            key={index}\r\n                            style={{\r\n                                flex: 0.5,\r\n                                marginLeft: index % 2 == 0 ? 10 : 0,\r\n                                marginRight: 10,\r\n                                marginTop: 5,\r\n                                marginBottom: 5,\r\n                                borderRadius: 20,\r\n                                borderWidth: 1,\r\n                                borderColor: colors.inactive\r\n                            }}\r\n                        >\r\n                            <View\r\n                                style={{\r\n                                    marginTop: 10,\r\n                                    flexDirection: 'row'\r\n                                }}>\r\n                                <Image\r\n                                    style={{\r\n                                        width: 90,\r\n                                        height: 100,\r\n                                        resizeMode: 'cover',\r\n                                        borderRadius: 20,\r\n                                        marginRight: 15\r\n                                    }}\r\n                                    source={{\r\n                                        uri: item.url\r\n                                    }}\r\n                                />\r\n                                <Text\r\n                                    style={{\r\n                                        color: 'black',\r\n                                        fontSize: fontSizes.h3,\r\n                                        flex: 1,\r\n                                        textAlign: 'right'\r\n                                    }}\r\n                                >\r\n                                    $ {item.price}\r\n                                </Text>\r\n                            </View>\r\n                            <Text\r\n                                style={{\r\n                                    color: colors.primary,\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: fontSizes.h5,\r\n                                    marginHorizontal: 10,\r\n                                    marginTop: 5\r\n                                }}\r\n                            >\r\n                                {item.productName}\r\n                            </Text>\r\n                            {\r\n                                item.specifications.map((specification, index) =>\r\n                                    <Text\r\n                                        key={index}\r\n                                        style={{\r\n                                            color: 'black',\r\n                                            fontSize: fontSizes.h6,\r\n                                            paddingHorizontal: 5,\r\n                                            paddingBottom: 10\r\n                                        }}\r\n                                    >\r\n                                        * {specification}\r\n                                    </Text>)\r\n                            }\r\n\r\n                            <View\r\n                                style={{\r\n                                    flexDirection: 'row',\r\n                                    padding: 10\r\n                                }}>\r\n                                <TouchableOpacity\r\n                                    style={{\r\n                                        flexDirection: 'row'\r\n                                    }}\r\n                                    onPress={() => {\r\n                                        let cloneProducts = products.map(eachProduct => {\r\n                                            if (item.productName == eachProduct.productName) {\r\n                                                // return { ...eachProduct, isSaved: true };\r\n                                                return { ...eachProduct, isSaved: eachProduct.isSaved == undefined || eachProduct.isSaved == false ? true : false };\r\n                                            }\r\n                                            return eachProduct;\r\n                                        })\r\n                                        setProducts(cloneProducts);\r\n                                    }}\r\n                                >\r\n                                    <Icon\r\n                                        name='heart' size={22}\r\n                                        color={item.isSaved == undefined || item.isSaved == false ?\r\n                                            colors.inactive : 'red'}\r\n                                        style={{\r\n                                            marginEnd: 5\r\n                                        }}\r\n                                    />\r\n                                    <Text\r\n                                        style={{\r\n                                            color: 'red',\r\n                                            fontSize: fontSizes.h6 * 0.8,\r\n                                            width: 50\r\n                                        }}\r\n                                    >\r\n                                        Saved for later\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n\r\n                                <View\r\n                                    style={{\r\n                                        flex: 1\r\n                                    }}\r\n                                >\r\n                                    <FiveStars numberOfStars={item.stars} />\r\n                                    <Text\r\n                                        style={{\r\n                                            color: 'blue',\r\n                                            fontSize: fontSizes.h6 * 0.8,\r\n                                            textAlign: 'right',\r\n                                            paddingTop: 3\r\n                                        }}\r\n                                    >\r\n                                        {item.reviews} reviews\r\n                                    </Text>\r\n                                </View>\r\n\r\n                            </View>\r\n                        </View>\r\n                    )\r\n                }}\r\n            />\r\n        </View >\r\n    )\r\n}\r\n\r\nexport default ProductGridView;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}