{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nvar SERVER_NAME = 'randomuser.me';\nvar urlGetUserDetail = \"https://\" + SERVER_NAME + \"/api\";\n\nvar getUserDetail = function _callee() {\n  var response, _responseUser$gender, _responseUser$phone, responseUser, user;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(urlGetUserDetail));\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.status != 200)) {\n            _context.next = 6;\n            break;\n          }\n\n          throw 'Failed request';\n\n        case 6:\n          if (!(response.data.results.length > 0)) {\n            _context.next = 10;\n            break;\n          }\n\n          responseUser = response.data.results[0];\n          user = {\n            'dateOfBirth': new Date(responseUser.dob.date),\n            'email': responseUser.email,\n            'gender': (_responseUser$gender = responseUser.gender) != null ? _responseUser$gender : 'male',\n            'userId': \"\" + responseUser.id.name + responseUser.id.value,\n            'address': responseUser.location.state + \", \" + responseUser.location.street.name,\n            'username': responseUser.login.username,\n            'url': responseUser.picture.large,\n            'phone': (_responseUser$phone = responseUser.phone) != null ? _responseUser$phone : '',\n            'registerDate': new Date(responseUser.registered.date)\n          };\n          return _context.abrupt(\"return\", user);\n\n        case 10:\n          throw 'User not found';\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0;\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 13]], Promise);\n};\n\nvar login = function login(email, password) {};\n\nexport default {\n  getUserDetail: getUserDetail,\n  login: login\n};","map":{"version":3,"names":["axios","SERVER_NAME","urlGetUserDetail","getUserDetail","get","response","status","data","results","length","responseUser","user","Date","dob","date","email","gender","id","name","value","location","state","street","login","username","picture","large","phone","registered","password"],"sources":["D:/React/react-native-project/training-app/repositories/user.ts"],"sourcesContent":["// https://randomuser.me/api\r\nimport axios from 'axios';\r\n\r\nconst SERVER_NAME = 'randomuser.me';\r\nconst urlGetUserDetail = `https://${SERVER_NAME}/api`;\r\n\r\nconst getUserDetail = async () => {\r\n    try {\r\n        let response = await axios.get(urlGetUserDetail);\r\n        if (response.status != 200) {\r\n            throw 'Failed request'\r\n        }\r\n\r\n        if (response.data.results.length > 0) {\r\n            let responseUser = response.data.results[0];\r\n            let user = {\r\n                'dateOfBirth': new Date(responseUser.dob.date),\r\n                'email': responseUser.email,\r\n                'gender': responseUser.gender ?? 'male',\r\n                'userId': `${responseUser.id.name}${responseUser.id.value}`,\r\n                'address': `${responseUser.location.state}, ${responseUser.location.street.name}`,\r\n                'username': responseUser.login.username,\r\n                'url': responseUser.picture.large,\r\n                'phone': responseUser.phone ?? '',\r\n                'registerDate': new Date(responseUser.registered.date)\r\n            };\r\n            return user;\r\n        }\r\n        throw 'User not found';\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst login = (email: string, password: string) => {\r\n\r\n}\r\n\r\nexport default {\r\n    getUserDetail,\r\n    login\r\n}"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,WAAW,GAAG,eAApB;AACA,IAAMC,gBAAgB,gBAAcD,WAAd,SAAtB;;AAEA,IAAME,aAAa,GAAG;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEOH,KAAK,CAACI,GAAN,CAAUF,gBAAV,CAFP;;QAAA;UAEVG,QAFU;;UAAA,MAGVA,QAAQ,CAACC,MAAT,IAAmB,GAHT;YAAA;YAAA;UAAA;;UAAA,MAIJ,gBAJI;;QAAA;UAAA,MAOVD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,MAAtB,GAA+B,CAPrB;YAAA;YAAA;UAAA;;UAQNC,YARM,GAQSL,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CART;UASNG,IATM,GASC;YACP,eAAe,IAAIC,IAAJ,CAASF,YAAY,CAACG,GAAb,CAAiBC,IAA1B,CADR;YAEP,SAASJ,YAAY,CAACK,KAFf;YAGP,kCAAUL,YAAY,CAACM,MAAvB,mCAAiC,MAH1B;YAIP,eAAaN,YAAY,CAACO,EAAb,CAAgBC,IAA7B,GAAoCR,YAAY,CAACO,EAAb,CAAgBE,KAJ7C;YAKP,WAAcT,YAAY,CAACU,QAAb,CAAsBC,KAApC,UAA8CX,YAAY,CAACU,QAAb,CAAsBE,MAAtB,CAA6BJ,IALpE;YAMP,YAAYR,YAAY,CAACa,KAAb,CAAmBC,QANxB;YAOP,OAAOd,YAAY,CAACe,OAAb,CAAqBC,KAPrB;YAQP,gCAAShB,YAAY,CAACiB,KAAtB,kCAA+B,EARxB;YASP,gBAAgB,IAAIf,IAAJ,CAASF,YAAY,CAACkB,UAAb,CAAwBd,IAAjC;UATT,CATD;UAAA,iCAoBHH,IApBG;;QAAA;UAAA,MAsBR,gBAtBQ;;QAAA;UAAA;UAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAtB;;AA6BA,IAAMY,KAAK,GAAG,SAARA,KAAQ,CAACR,KAAD,EAAgBc,QAAhB,EAAqC,CAElD,CAFD;;AAIA,eAAe;EACX1B,aAAa,EAAbA,aADW;EAEXoB,KAAK,EAALA;AAFW,CAAf"},"metadata":{},"sourceType":"module"}