{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { UIHeader } from \"../../components\";\nimport { fontSizes } from \"../../constants\";\nimport { get, child, firebaseDatabase, firebaseDatabaseRef } from \"../../firebase/firebase\";\nimport ChatItem from \"./ChatItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Chat = function Chat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{}]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    var dbRef = firebaseDatabaseRef(firebaseDatabase);\n    get(child(dbRef, 'users')).then(function (snapshot) {\n      if (snapshot.exists()) {\n        var snapshotObject = snapshot.val();\n        setUsers(Object.keys(snapshotObject).map(function (eachKey) {\n          var eachObject = snapshotObject[eachKey];\n          return {\n            url: \"https://www.w3schools.com/howto/img_avatar.png\",\n            name: eachObject.email,\n            email: eachObject.email,\n            accessToken: eachObject.accessToken,\n            numberOfUnreadMessages: 0,\n            userId: eachKey\n          };\n        }));\n      } else {\n        console.log('No data avaiable');\n      }\n    }).catch(function (error) {\n      console.log(\"Cannot get users from Firebase: \" + error);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column'\n    },\n    children: [_jsx(UIHeader, {\n      title: 'Notification',\n      lefIconName: 'arrow-left',\n      rightIconName: 'search',\n      onPressLeftIcon: function onPressLeftIcon() {\n        return alert('left icon');\n      },\n      onPressRightIcon: function onPressRightIcon() {\n        return alert('right icon');\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingStart: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: 'black',\n          fontSize: fontSizes.h6\n        },\n        children: \"6 unread messages\"\n      }), _jsx(Icon, {\n        name: 'search',\n        size: 23,\n        color: 'white',\n        style: {\n          padding: 10\n        },\n        onPress: function onPress() {\n          return alert('You Press delete');\n        }\n      })]\n    }), _jsx(FlatList, {\n      scrollEnabled: true,\n      style: {},\n      data: users,\n      renderItem: function _callee(_ref2) {\n        var item, index, stringUser, myUserId;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                item = _ref2.item, index = _ref2.index;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n              case 3:\n                stringUser = _context.sent;\n                myUserId = JSON.parse(stringUser).userId;\n                return _context.abrupt(\"return\", _jsx(ChatItem, {\n                  name: item.name,\n                  url: item.url,\n                  message: item.message,\n                  numberOfUnreadMessages: item.numberOfUnreadMessages,\n                  onPress: function onPress() {\n                    return navigation.navigate('Messenger', {\n                      user: item\n                    });\n                  }\n                }, item.accessToken));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    })]\n  });\n};\n\nexport default Chat;","map":{"version":3,"names":["AsyncStorage","React","useEffect","useState","FlatList","Icon","UIHeader","fontSizes","get","child","firebaseDatabase","firebaseDatabaseRef","ChatItem","Chat","navigation","users","setUsers","dbRef","then","snapshot","exists","snapshotObject","val","Object","keys","map","eachKey","eachObject","url","name","email","accessToken","numberOfUnreadMessages","userId","console","log","catch","error","flexDirection","alert","justifyContent","alignItems","paddingStart","color","fontSize","h6","padding","item","index","getItem","stringUser","myUserId","JSON","parse","message","navigate","user"],"sources":["D:/React/react-native-project/training-app/screens/Chat/Chat.tsx"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NativeStackHeaderProps } from '@react-navigation/native-stack';\nimport React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    Dimensions\n} from \"react-native\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport { SafeAreaView } from 'react-navigation';\nimport { UIHeader } from '../../components';\nimport { fontSizes } from '../../constants';\nimport { get, child, firebaseDatabase, firebaseDatabaseRef } from '../../firebase/firebase';\nimport ChatItem from './ChatItem';\n\n\nconst Chat = ({ navigation }: NativeStackHeaderProps) => {\n\n    const [users, setUsers] = useState([\n        {\n            // url: 'https://randomuser.me/api/portraits/men/10.jpg',\n            // name: 'Đỗ Quốc Thưởng',\n            // message: 'Hello, how are you ?',\n            // numberOfUnreadMessages: 3\n        }\n    ]);\n\n    useEffect(() => {\n        const dbRef = firebaseDatabaseRef(firebaseDatabase);\n        get(child(dbRef, 'users')).then((snapshot) => {\n            if (snapshot.exists()) {\n                let snapshotObject = snapshot.val();\n                setUsers(Object.keys(snapshotObject).map(eachKey => {\n                    let eachObject = snapshotObject[eachKey];\n                    return {\n                        url: `https://www.w3schools.com/howto/img_avatar.png`,\n                        name: eachObject.email,\n                        email: eachObject.email,\n                        accessToken: eachObject.accessToken,\n                        numberOfUnreadMessages: 0,\n                        userId: eachKey\n                    }\n                }));\n\n            } else {\n                console.log('No data avaiable')\n            }\n        }).catch((error) => {\n            console.log(`Cannot get users from Firebase: ${error}`);\n        })\n    }, []);\n    return (\n        <View\n            style={{\n                flexDirection: 'column'\n            }}\n        >\n            <UIHeader\n                title={'Notification'}\n                lefIconName={'arrow-left'}\n                rightIconName={'search'}\n                onPressLeftIcon={() => {\n                    return alert('left icon');\n                }}\n                onPressRightIcon={() => {\n                    return alert('right icon');\n                }}\n            />\n            <View\n                style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    paddingStart: 10\n                }}\n            >\n                <Text\n                    style={{\n                        color: 'black',\n                        fontSize: fontSizes.h6\n                    }}>\n                    6 unread messages\n                </Text>\n                <Icon name={'search'} size={23} color={'white'}\n                    style={{\n                        padding: 10\n                    }}\n                    onPress={() => alert('You Press delete')}\n                />\n            </View>\n            <FlatList\n                scrollEnabled={true}\n                style={{\n                    // backgroundColor: 'red'\n                }}\n                // keyExtractor={item => item.accessToken}\n                data={users}\n                renderItem={async ({ item, index }) => {\n                    let stringUser = await AsyncStorage.getItem('user');\n                    let myUserId = JSON.parse(stringUser).userId;\n                    return <ChatItem\n                        key={item.accessToken}\n                        name={item.name}\n                        url={item.url}\n                        message={item.message}\n                        numberOfUnreadMessages={item.numberOfUnreadMessages}\n                        onPress={() => navigation.navigate('Messenger', { user: item })}\n                    />\n                }\n                }\n\n            />\n        </View>\n    )\n}\n\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module"}