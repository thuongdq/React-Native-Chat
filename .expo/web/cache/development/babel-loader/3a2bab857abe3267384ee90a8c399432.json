{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { UIHeader } from \"../../components\";\nimport { fontSizes } from \"../../constants\";\nimport { firebaseDatabase, firebaseDatabaseRef, onValue } from \"../../firebase/firebase\";\nimport ChatItem from \"./ChatItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Chat = function Chat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{}]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    onValue(firebaseDatabaseRef(firebaseDatabase, 'users'), function _callee(snapshot) {\n      var snapshotObject, stringUser, myUserId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!snapshot.exists()) {\n                _context.next = 9;\n                break;\n              }\n\n              snapshotObject = snapshot.val();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 4:\n              stringUser = _context.sent;\n              myUserId = JSON.parse(stringUser).userId;\n              setUsers(Object.keys(snapshotObject).filter(function (eachKey) {\n                return eachKey != myUserId;\n              }).map(function (eachKey) {\n                var eachObject = snapshotObject[eachKey];\n                return {\n                  url: 'https://www.w3schools.com/howto/img_avatar.png',\n                  name: eachObject.email,\n                  email: eachObject.email,\n                  accessToken: eachObject.accessToken,\n                  numberOfUnreadMessages: 0,\n                  userId: eachKey\n                };\n              }));\n              _context.next = 10;\n              break;\n\n            case 9:\n              console.log('No data available');\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column'\n    },\n    children: [_jsx(UIHeader, {\n      title: 'Notification',\n      lefIconName: 'arrow-left',\n      rightIconName: 'search',\n      onPressLeftIcon: function onPressLeftIcon() {\n        return alert('left icon');\n      },\n      onPressRightIcon: function onPressRightIcon() {\n        return alert('right icon');\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        paddingStart: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: 'black',\n          fontSize: fontSizes.h6\n        },\n        children: \"6 unread messages\"\n      }), _jsx(Icon, {\n        name: 'search',\n        size: 23,\n        color: 'white',\n        style: {\n          padding: 10\n        },\n        onPress: function onPress() {\n          return alert('You Press delete');\n        }\n      })]\n    }), _jsx(FlatList, {\n      scrollEnabled: true,\n      style: {},\n      data: users,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsx(ChatItem, {\n          name: item.name,\n          url: item.url,\n          message: item.message,\n          numberOfUnreadMessages: item.numberOfUnreadMessages,\n          onPress: function onPress() {\n            return navigation.navigate('Messenger', {\n              user: item\n            });\n          }\n        }, item.accessToken);\n      }\n    })]\n  });\n};\n\nexport default Chat;","map":{"version":3,"names":["AsyncStorage","React","useEffect","useState","FlatList","Icon","UIHeader","fontSizes","firebaseDatabase","firebaseDatabaseRef","onValue","ChatItem","Chat","navigation","users","setUsers","snapshot","exists","snapshotObject","val","getItem","stringUser","myUserId","JSON","parse","userId","Object","keys","filter","eachKey","map","eachObject","url","name","email","accessToken","numberOfUnreadMessages","console","log","flexDirection","alert","justifyContent","alignItems","paddingStart","color","fontSize","h6","padding","item","index","message","navigate","user"],"sources":["D:/React/react-native-project/training-app/screens/Chat/Chat.tsx"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NativeStackHeaderProps } from '@react-navigation/native-stack';\nimport React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    Dimensions\n} from \"react-native\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { filterConfig } from 'react-native-gesture-handler/lib/typescript/handlers/gestureHandlerCommon';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport { SafeAreaView } from 'react-navigation';\nimport { UIHeader } from '../../components';\nimport { fontSizes } from '../../constants';\nimport { get, child, firebaseDatabase, firebaseDatabaseRef, onValue } from '../../firebase/firebase';\nimport ChatItem from './ChatItem';\n\n\nconst Chat = ({ navigation }: NativeStackHeaderProps) => {\n\n    const [users, setUsers] = useState([\n        {\n            // url: 'https://randomuser.me/api/portraits/men/10.jpg',\n            // name: 'Đỗ Quốc Thưởng',\n            // message: 'Hello, how are you ?',\n            // numberOfUnreadMessages: 3\n        }\n    ]);\n\n    useEffect(() => {\n        onValue(firebaseDatabaseRef(firebaseDatabase, 'users'), async (snapshot) => {\n            if (snapshot.exists()) {\n                let snapshotObject = snapshot.val()\n                let stringUser = await AsyncStorage.getItem(\"user\")\n                let myUserId = JSON.parse(stringUser).userId\n                setUsers(Object.keys(snapshotObject)\n                    .filter(eachKey => eachKey != myUserId).map(eachKey => {\n                        let eachObject = snapshotObject[eachKey]\n                        return {\n                            //default profile url\n                            url: 'https://www.w3schools.com/howto/img_avatar.png',\n                            name: eachObject.email,\n                            email: eachObject.email,\n                            accessToken: eachObject.accessToken,\n                            numberOfUnreadMessages: 0,\n                            userId: eachKey,\n                        }\n                    }))\n            } else {\n                console.log('No data available')\n            }\n        })\n    }, []);\n\n    return (\n        <View\n            style={{\n                flexDirection: 'column'\n            }}\n        >\n            <UIHeader\n                title={'Notification'}\n                lefIconName={'arrow-left'}\n                rightIconName={'search'}\n                onPressLeftIcon={() => {\n                    return alert('left icon');\n                }}\n                onPressRightIcon={() => {\n                    return alert('right icon');\n                }}\n            />\n            <View\n                style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    paddingStart: 10\n                }}\n            >\n                <Text\n                    style={{\n                        color: 'black',\n                        fontSize: fontSizes.h6\n                    }}>\n                    6 unread messages\n                </Text>\n                <Icon name={'search'} size={23} color={'white'}\n                    style={{\n                        padding: 10\n                    }}\n                    onPress={() => alert('You Press delete')}\n                />\n            </View>\n            <FlatList\n                scrollEnabled={true}\n                style={{\n                    // backgroundColor: 'red'\n                }}\n                // keyExtractor={item => item.accessToken}\n                data={users}\n                renderItem={({ item, index }) =>\n                    <ChatItem\n                        key={item.accessToken}\n                        name={item.name}\n                        url={item.url}\n                        message={item.message}\n                        numberOfUnreadMessages={item.numberOfUnreadMessages}\n                        onPress={() => navigation.navigate('Messenger', { user: item })}\n                    />}\n            />\n        </View>\n    )\n}\n\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module"}