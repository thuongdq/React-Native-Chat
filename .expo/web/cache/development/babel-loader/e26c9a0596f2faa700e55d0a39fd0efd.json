{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\n\nvar getUserDetail = function _callee() {\n  var response, _responseUser$gender, _responseUser$phone, responseUser, user;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('https://randomuser.me/api'));\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.status != 200)) {\n            _context.next = 6;\n            break;\n          }\n\n          throw 'Failed request';\n\n        case 6:\n          if (!(response.data.results.length > 0)) {\n            _context.next = 19;\n            break;\n          }\n\n          responseUser = response.data.results[0];\n          user = {};\n          user.dataOfBirth = new Date(responseUser.dob.date);\n          user.email = responseUser.email;\n          user.gender = (_responseUser$gender = responseUser.gender) != null ? _responseUser$gender : 'male';\n          user.userId = \"\" + responseUser.id.name + responseUser.id.value;\n          user.address = responseUser.location.state + \", \" + responseUser.location.street.name;\n          user.username = responseUser.login.username;\n          user.url = responseUser.picture.large;\n          user.phone = (_responseUser$phone = responseUser.phone) != null ? _responseUser$phone : '';\n          user.registerDate = new Date(responseUser.registered.date);\n          return _context.abrupt(\"return\", user);\n\n        case 19:\n          _context.next = 24;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n          throw _context.t0;\n\n        case 24:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 21]], Promise);\n};\n\nvar login = function login(email, password) {};\n\nexport default {\n  getUserDetail: getUserDetail,\n  login: login\n};","map":{"version":3,"names":["axios","getUserDetail","get","response","status","data","results","length","responseUser","user","dataOfBirth","Date","dob","date","email","gender","userId","id","name","value","address","location","state","street","username","login","url","picture","large","phone","registerDate","registered","password"],"sources":["D:/React/react-native-project/training-app/repositories/user.ts"],"sourcesContent":["// https://randomuser.me/api\r\nimport axios from 'axios';\r\n\r\nconst getUserDetail = async () => {\r\n    try {\r\n        let response = await axios.get('https://randomuser.me/api');\r\n        if (response.status != 200) {\r\n            throw 'Failed request'\r\n        }\r\n\r\n        if (response.data.results.length > 0) {\r\n            let responseUser = response.data.results[0];\r\n            let user = {};\r\n            user.dataOfBirth = new Date(responseUser.dob.date);\r\n            user.email = responseUser.email;\r\n            user.gender = responseUser.gender ?? 'male';\r\n            user.userId = `${responseUser.id.name}${responseUser.id.value}`;\r\n            user.address = `${responseUser.location.state}, ${responseUser.location.street.name}`;\r\n            user.username = responseUser.login.username;\r\n            user.url = responseUser.picture.large;\r\n            user.phone = responseUser.phone ?? '';\r\n            user.registerDate = new Date(responseUser.registered.date)\r\n            return user;\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nconst login = (email: string, password: string) => {\r\n\r\n}\r\n\r\nexport default {\r\n    getUserDetail,\r\n    login\r\n}"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEOD,KAAK,CAACE,GAAN,CAAU,2BAAV,CAFP;;QAAA;UAEVC,QAFU;;UAAA,MAGVA,QAAQ,CAACC,MAAT,IAAmB,GAHT;YAAA;YAAA;UAAA;;UAAA,MAIJ,gBAJI;;QAAA;UAAA,MAOVD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,MAAtB,GAA+B,CAPrB;YAAA;YAAA;UAAA;;UAQNC,YARM,GAQSL,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CART;UASNG,IATM,GASC,EATD;UAUVA,IAAI,CAACC,WAAL,GAAmB,IAAIC,IAAJ,CAASH,YAAY,CAACI,GAAb,CAAiBC,IAA1B,CAAnB;UACAJ,IAAI,CAACK,KAAL,GAAaN,YAAY,CAACM,KAA1B;UACAL,IAAI,CAACM,MAAL,2BAAcP,YAAY,CAACO,MAA3B,mCAAqC,MAArC;UACAN,IAAI,CAACO,MAAL,QAAiBR,YAAY,CAACS,EAAb,CAAgBC,IAAjC,GAAwCV,YAAY,CAACS,EAAb,CAAgBE,KAAxD;UACAV,IAAI,CAACW,OAAL,GAAkBZ,YAAY,CAACa,QAAb,CAAsBC,KAAxC,UAAkDd,YAAY,CAACa,QAAb,CAAsBE,MAAtB,CAA6BL,IAA/E;UACAT,IAAI,CAACe,QAAL,GAAgBhB,YAAY,CAACiB,KAAb,CAAmBD,QAAnC;UACAf,IAAI,CAACiB,GAAL,GAAWlB,YAAY,CAACmB,OAAb,CAAqBC,KAAhC;UACAnB,IAAI,CAACoB,KAAL,0BAAarB,YAAY,CAACqB,KAA1B,kCAAmC,EAAnC;UACApB,IAAI,CAACqB,YAAL,GAAoB,IAAInB,IAAJ,CAASH,YAAY,CAACuB,UAAb,CAAwBlB,IAAjC,CAApB;UAlBU,iCAmBHJ,IAnBG;;QAAA;UAAA;UAAA;;QAAA;UAAA;UAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAtB;;AA2BA,IAAMgB,KAAK,GAAG,SAARA,KAAQ,CAACX,KAAD,EAAgBkB,QAAhB,EAAqC,CAElD,CAFD;;AAIA,eAAe;EACX/B,aAAa,EAAbA,aADW;EAEXwB,KAAK,EAALA;AAFW,CAAf"},"metadata":{},"sourceType":"module"}