{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nvar SERVER_NAME = 'datausa.io';\n\nfunction getPopulation(_ref) {\n  var drilldowns, measures, urlGetPopulation, result, responseData, index;\n  return _regeneratorRuntime.async(function getPopulation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          drilldowns = _ref.drilldowns, measures = _ref.measures;\n          urlGetPopulation = \"https://\" + SERVER_NAME + \"/api/data?drilldowns=\" + drilldowns + \"&measures=\" + measures;\n          _context.prev = 2;\n          result = new Array();\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(urlGetPopulation));\n\n        case 6:\n          responseData = _context.sent;\n          index = 0;\n          responseData.data.data.forEach(function (item) {\n            var myObject = {\n              'nationId': item['ID Nation'],\n              'year': item['Year'],\n              'population': item['Population']\n            };\n            result.push(myObject);\n            index++;\n          });\n          return _context.abrupt(\"return\", result);\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](2);\n          throw _context.t0;\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n}\n\nexport default {\n  getPopulation: getPopulation\n};","map":{"version":3,"names":["axios","SERVER_NAME","getPopulation","drilldowns","measures","urlGetPopulation","result","Array","get","responseData","index","data","forEach","item","myObject","push"],"sources":["D:/React/react-native-project/training-app/repositories/population.ts"],"sourcesContent":["import axios from \"axios\"\r\n//https://datausa.io/api/data?drilldowns=Nation&measures=Population\r\nconst SERVER_NAME = 'datausa.io'\r\nasync function getPopulation({ drilldowns, measures }: { drilldowns: string, measures: string }) {\r\n    const urlGetPopulation = `https://${SERVER_NAME}/api/data?drilldowns=${drilldowns}&measures=${measures}`\r\n    try {\r\n        let result = new Array();\r\n        let responseData = await axios.get(urlGetPopulation)\r\n        let index = 0;\r\n        responseData.data.data.forEach(function (item) {\r\n            let myObject = {\r\n                'nationId': item['ID Nation'],\r\n                'year': item['Year'],\r\n                'population': item['Population']\r\n            }\r\n            // result[index] = myObject;\r\n            result.push(myObject);\r\n            index++;\r\n        })\r\n\r\n        return result;\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n//many other functions\r\nexport default {\r\n    getPopulation,\r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,WAAW,GAAG,YAApB;;AACA,SAAeC,aAAf;EAAA;EAAA;IAAA;MAAA;QAAA;UAA+BC,UAA/B,QAA+BA,UAA/B,EAA2CC,QAA3C,QAA2CA,QAA3C;UACUC,gBADV,gBACwCJ,WADxC,6BAC2EE,UAD3E,kBACkGC,QADlG;UAAA;UAGYE,MAHZ,GAGqB,IAAIC,KAAJ,EAHrB;UAAA;UAAA,iCAIiCP,KAAK,CAACQ,GAAN,CAAUH,gBAAV,CAJjC;;QAAA;UAIYI,YAJZ;UAKYC,KALZ,GAKoB,CALpB;UAMQD,YAAY,CAACE,IAAb,CAAkBA,IAAlB,CAAuBC,OAAvB,CAA+B,UAAUC,IAAV,EAAgB;YAC3C,IAAIC,QAAQ,GAAG;cACX,YAAYD,IAAI,CAAC,WAAD,CADL;cAEX,QAAQA,IAAI,CAAC,MAAD,CAFD;cAGX,cAAcA,IAAI,CAAC,YAAD;YAHP,CAAf;YAMAP,MAAM,CAACS,IAAP,CAAYD,QAAZ;YACAJ,KAAK;UACR,CATD;UANR,iCAiBeJ,MAjBf;;QAAA;UAAA;UAAA;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAuBA,eAAe;EACXJ,aAAa,EAAbA;AADW,CAAf"},"metadata":{},"sourceType":"module"}