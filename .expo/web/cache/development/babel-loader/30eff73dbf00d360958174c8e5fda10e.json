{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { dataProducts } from \"../../constants\";\nimport GridItem from \"./GridItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ProductGridView(props) {\n  var _useState = useState(dataProducts.products),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    children: _jsx(FlatList, {\n      style: {\n        marginTop: 5\n      },\n      keyExtractor: function keyExtractor(eachProduct) {\n        return eachProduct.productName;\n      },\n      data: products,\n      numColumns: 2,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsx(GridItem, {\n          item: item,\n          index: index,\n          onPress: function onPress() {\n            var cloneProducts = products.map(function (eachProduct) {\n              if (item.productName == eachProduct.productName) {\n                return _objectSpread(_objectSpread({}, eachProduct), {}, {\n                  isSaved: eachProduct.isSaved == undefined || eachProduct.isSaved == false ? true : false\n                });\n              }\n\n              return eachProduct;\n            });\n            setProducts(cloneProducts);\n          }\n        });\n      }\n    })\n  });\n}\n\nexport default ProductGridView;","map":{"version":3,"names":["React","useState","dataProducts","GridItem","ProductGridView","props","products","setProducts","flex","backgroundColor","marginTop","eachProduct","productName","item","index","cloneProducts","map","isSaved","undefined"],"sources":["D:/React/react-native-project/training-app/screens/ProductGrid/ProductGridView.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Image,\r\n    FlatList,\r\n    SafeAreaView\r\n} from \"react-native\";\r\n// import { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nimport { dataProducts } from '../../constants';\r\nimport GridItem from './GridItem';\r\n\r\nfunction ProductGridView(props: any) {\r\n    const [products, setProducts] = useState(dataProducts.products);\r\n    return (\r\n        <SafeAreaView\r\n            style={{\r\n                flex: 1,\r\n                backgroundColor: 'white'\r\n            }}\r\n        >\r\n            <FlatList\r\n                style={{ marginTop: 5 }}\r\n                keyExtractor={(eachProduct) => eachProduct.productName}\r\n                data={products}\r\n                numColumns={2}\r\n                renderItem={({ item, index }) => <GridItem\r\n                    item={item} index={index}\r\n                    onPress={() => {\r\n                        let cloneProducts = products.map(eachProduct => {\r\n                            if (item.productName == eachProduct.productName) {\r\n                                // return { ...eachProduct, isSaved: true };\r\n                                return { ...eachProduct, isSaved: eachProduct.isSaved == undefined || eachProduct.isSaved == false ? true : false };\r\n                            }\r\n                            return eachProduct;\r\n                        })\r\n                        setProducts(cloneProducts);\r\n                    }}\r\n                />}\r\n            />\r\n        </SafeAreaView >\r\n    )\r\n}\r\n\r\nexport default ProductGridView;\r\n\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AASA,SAASC,YAAT;AACA,OAAOC,QAAP;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;EACjC,gBAAgCJ,QAAQ,CAACC,YAAY,CAACI,QAAd,CAAxC;EAAA;EAAA,IAAOA,QAAP;EAAA,IAAiBC,WAAjB;;EACA,OACI,KAAC,YAAD;IACI,KAAK,EAAE;MACHC,IAAI,EAAE,CADH;MAEHC,eAAe,EAAE;IAFd,CADX;IAAA,UAMI,KAAC,QAAD;MACI,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAb,CADX;MAEI,YAAY,EAAE,sBAACC,WAAD;QAAA,OAAiBA,WAAW,CAACC,WAA7B;MAAA,CAFlB;MAGI,IAAI,EAAEN,QAHV;MAII,UAAU,EAAE,CAJhB;MAKI,UAAU,EAAE;QAAA,IAAGO,IAAH,QAAGA,IAAH;QAAA,IAASC,KAAT,QAASA,KAAT;QAAA,OAAqB,KAAC,QAAD;UAC7B,IAAI,EAAED,IADuB;UACjB,KAAK,EAAEC,KADU;UAE7B,OAAO,EAAE,mBAAM;YACX,IAAIC,aAAa,GAAGT,QAAQ,CAACU,GAAT,CAAa,UAAAL,WAAW,EAAI;cAC5C,IAAIE,IAAI,CAACD,WAAL,IAAoBD,WAAW,CAACC,WAApC,EAAiD;gBAE7C,uCAAYD,WAAZ;kBAAyBM,OAAO,EAAEN,WAAW,CAACM,OAAZ,IAAuBC,SAAvB,IAAoCP,WAAW,CAACM,OAAZ,IAAuB,KAA3D,GAAmE,IAAnE,GAA0E;gBAA5G;cACH;;cACD,OAAON,WAAP;YACH,CANmB,CAApB;YAOAJ,WAAW,CAACQ,aAAD,CAAX;UACH;QAX4B,EAArB;MAAA;IALhB;EANJ,EADJ;AA4BH;;AAED,eAAeX,eAAf"},"metadata":{},"sourceType":"module"}