{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { colors, fontSizes, data } from \"../../constants\";\nimport FoodItem from \"./FoodItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction FoodList(props) {\n  var _useState = useState(data.foods),\n      _useState2 = _slicedToArray(_useState, 2),\n      foods = _useState2[0],\n      setFoods = _useState2[1];\n\n  var _useState3 = useState(data.categories),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categories = _useState4[0],\n      setCategories = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchText = _useState6[0],\n      setSearchTech = _useState6[1];\n\n  var filteredFoods = function filteredFoods() {\n    return foods.filter(function (eachFood) {\n      return eachFood.name.toLowerCase().includes(searchText.toLowerCase());\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    children: [_jsxs(View, {\n      style: {\n        margin: 10,\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [_jsx(Icon, {\n        name: \"search\",\n        size: 15,\n        color: 'black',\n        style: {\n          position: 'absolute',\n          top: 12,\n          left: 10\n        }\n      }), _jsx(TextInput, {\n        autoCorrect: false,\n        onChangeText: function onChangeText(text) {\n          return setSearchTech(text);\n        },\n        style: {\n          backgroundColor: colors.inactive,\n          height: 40,\n          flex: 1,\n          marginEnd: 5,\n          borderRadius: 5,\n          opacity: 0.5,\n          paddingStart: 30\n        }\n      }), _jsx(Icon, {\n        name: \"bars\",\n        size: 30,\n        color: 'black'\n      })]\n    }), _jsxs(View, {\n      style: {\n        height: 100\n      },\n      children: [_jsx(View, {\n        style: {\n          height: 1,\n          backgroundColor: colors.inactive\n        }\n      }), _jsx(FlatList, {\n        horizontal: true,\n        data: categories,\n        keyExtractor: function keyExtractor(eachCatrgory) {\n          return eachCatrgory.name;\n        },\n        showsHorizontalScrollIndicator: false,\n        style: {\n          flex: 1\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return alert(\"Press Category \" + item.name);\n            },\n            style: {\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [_jsx(Image, {\n              style: {\n                width: 50,\n                height: 50,\n                resizeMode: 'cover',\n                borderRadius: 80,\n                marginRight: 15,\n                margin: 10\n              },\n              source: {\n                uri: item.url\n              }\n            }), _jsx(Text, {\n              style: {\n                color: 'black',\n                fontSize: fontSizes.h6 * 0.8\n              },\n              children: item.name\n            })]\n          });\n        }\n      }), _jsx(View, {\n        style: {\n          height: 1,\n          backgroundColor: colors.inactive\n        }\n      })]\n    }), _jsx(FlatList, {\n      data: filteredFoods(),\n      keyExtractor: function keyExtractor(eachFood) {\n        return eachFood.name;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsx(FoodItem, {\n          food: item,\n          onPress: function onPress() {\n            alert(\"You press item's name \" + item.name);\n          }\n        }, index);\n      }\n    })]\n  });\n}\n\nexport default FoodList;","map":{"version":3,"names":["React","useState","Icon","colors","fontSizes","data","FoodItem","FoodList","props","foods","setFoods","categories","setCategories","searchText","setSearchTech","filteredFoods","filter","eachFood","name","toLowerCase","includes","flex","backgroundColor","margin","flexDirection","alignItems","position","top","left","text","inactive","height","marginEnd","borderRadius","opacity","paddingStart","eachCatrgory","item","index","alert","justifyContent","width","resizeMode","marginRight","uri","url","color","fontSize","h6"],"sources":["D:/React/react-native-project/training-app/screens/FoodList/FoodList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    Image,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    Keyboard,\r\n    ScrollView,\r\n    FlatList\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nimport { images, colors, icons, fontSizes, data } from '../../constants';\r\nimport { isValidEmail, isValidPassword } from '../../util/Validations';\r\nimport FoodItem from './FoodItem';\r\n\r\n// import data from '../../constants/data.json';\r\n\r\n/**\r\n * \r\n - Listview from map\r\n - Flatlist\r\n */\r\nfunction FoodList(props: any) {\r\n    const [foods, setFoods] = useState(data.foods);\r\n    const [categories, setCategories] = useState(data.categories);\r\n    const [searchText, setSearchTech] = useState('');\r\n    const filteredFoods = () => {\r\n        return foods.filter(eachFood => eachFood.name.toLowerCase().includes(searchText.toLowerCase()));\r\n    }\r\n    return (\r\n        <View\r\n            style={{\r\n                flex: 1,\r\n                backgroundColor: 'white'\r\n            }}\r\n        >\r\n            <View\r\n                style={{\r\n                    margin: 10,\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center'\r\n                }} >\r\n                <Icon\r\n                    name='search' size={15} color={'black'}\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 12,\r\n                        left: 10\r\n                    }}\r\n                />\r\n                <TextInput\r\n                    autoCorrect={false}\r\n                    onChangeText={(text) => setSearchTech(text)}\r\n                    style={{\r\n                        backgroundColor: colors.inactive,\r\n                        height: 40,\r\n                        flex: 1,\r\n                        marginEnd: 5,\r\n                        borderRadius: 5,\r\n                        opacity: 0.5,\r\n                        paddingStart: 30\r\n                    }}\r\n                />\r\n                <Icon name='bars' size={30} color={'black'} />\r\n            </View>\r\n            <View\r\n                style={{\r\n                    height: 100\r\n                }}\r\n            >\r\n                <View style={{ height: 1, backgroundColor: colors.inactive }} />\r\n\r\n                <FlatList\r\n                    horizontal={true}\r\n                    data={categories}\r\n                    keyExtractor={eachCatrgory => eachCatrgory.name}\r\n                    showsHorizontalScrollIndicator={false}\r\n                    style={{ flex: 1 }}\r\n                    renderItem={({ item, index }) => {\r\n                        return (\r\n                            <TouchableOpacity\r\n                                onPress={() => {\r\n                                    return alert(`Press Category ${item.name}`);\r\n                                }}\r\n                                style={{\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center'\r\n                                }}\r\n                            >\r\n                                <Image\r\n                                    style={{\r\n                                        width: 50,\r\n                                        height: 50,\r\n                                        resizeMode: 'cover',\r\n                                        borderRadius: 80,\r\n                                        marginRight: 15,\r\n                                        margin: 10\r\n                                    }}\r\n                                    source={{\r\n                                        uri: item.url\r\n                                    }}\r\n                                />\r\n                                <Text\r\n                                    style={{\r\n                                        color: 'black',\r\n                                        fontSize: fontSizes.h6 * 0.8\r\n                                    }}\r\n                                >\r\n                                    {item.name}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        )\r\n                    }}\r\n                >\r\n\r\n                </FlatList>\r\n                <View style={{ height: 1, backgroundColor: colors.inactive }} />\r\n            </View>\r\n            {/* <ScrollView>\r\n                {\r\n                    foods.map((eachFood: any, index: number) => <FoodItem key={index} he food={eachFood} />)\r\n                }\r\n            </ScrollView> */}\r\n            {<FlatList\r\n                data={filteredFoods()}\r\n                keyExtractor={eachFood => eachFood.name}\r\n                renderItem={({ item, index }) => {\r\n                    return <FoodItem\r\n                        food={item} key={index}\r\n                        onPress={() => {\r\n                            alert(`You press item's name ${item.name}`);\r\n                        }}\r\n                    />\r\n                }}\r\n            />}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default FoodList"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAaA,OAAOC,IAAP;AAEA,SAAiBC,MAAjB,EAAgCC,SAAhC,EAA2CC,IAA3C;AAEA,OAAOC,QAAP;;;;AASA,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;EAC1B,gBAA0BP,QAAQ,CAACI,IAAI,CAACI,KAAN,CAAlC;EAAA;EAAA,IAAOA,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAoCT,QAAQ,CAACI,IAAI,CAACM,UAAN,CAA5C;EAAA;EAAA,IAAOA,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAoCX,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOY,UAAP;EAAA,IAAmBC,aAAnB;;EACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IACxB,OAAON,KAAK,CAACO,MAAN,CAAa,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCP,UAAU,CAACM,WAAX,EAArC,CAAJ;IAAA,CAArB,CAAP;EACH,CAFD;;EAGA,OACI,MAAC,IAAD;IACI,KAAK,EAAE;MACHE,IAAI,EAAE,CADH;MAEHC,eAAe,EAAE;IAFd,CADX;IAAA,WAMI,MAAC,IAAD;MACI,KAAK,EAAE;QACHC,MAAM,EAAE,EADL;QAEHC,aAAa,EAAE,KAFZ;QAGHC,UAAU,EAAE;MAHT,CADX;MAAA,WAMI,KAAC,IAAD;QACI,IAAI,EAAC,QADT;QACkB,IAAI,EAAE,EADxB;QAC4B,KAAK,EAAE,OADnC;QAEI,KAAK,EAAE;UACHC,QAAQ,EAAE,UADP;UAEHC,GAAG,EAAE,EAFF;UAGHC,IAAI,EAAE;QAHH;MAFX,EANJ,EAcI,KAAC,SAAD;QACI,WAAW,EAAE,KADjB;QAEI,YAAY,EAAE,sBAACC,IAAD;UAAA,OAAUf,aAAa,CAACe,IAAD,CAAvB;QAAA,CAFlB;QAGI,KAAK,EAAE;UACHP,eAAe,EAAEnB,MAAM,CAAC2B,QADrB;UAEHC,MAAM,EAAE,EAFL;UAGHV,IAAI,EAAE,CAHH;UAIHW,SAAS,EAAE,CAJR;UAKHC,YAAY,EAAE,CALX;UAMHC,OAAO,EAAE,GANN;UAOHC,YAAY,EAAE;QAPX;MAHX,EAdJ,EA2BI,KAAC,IAAD;QAAM,IAAI,EAAC,MAAX;QAAkB,IAAI,EAAE,EAAxB;QAA4B,KAAK,EAAE;MAAnC,EA3BJ;IAAA,EANJ,EAmCI,MAAC,IAAD;MACI,KAAK,EAAE;QACHJ,MAAM,EAAE;MADL,CADX;MAAA,WAKI,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEA,MAAM,EAAE,CAAV;UAAaT,eAAe,EAAEnB,MAAM,CAAC2B;QAArC;MAAb,EALJ,EAOI,KAAC,QAAD;QACI,UAAU,EAAE,IADhB;QAEI,IAAI,EAAEnB,UAFV;QAGI,YAAY,EAAE,sBAAAyB,YAAY;UAAA,OAAIA,YAAY,CAAClB,IAAjB;QAAA,CAH9B;QAII,8BAA8B,EAAE,KAJpC;QAKI,KAAK,EAAE;UAAEG,IAAI,EAAE;QAAR,CALX;QAMI,UAAU,EAAE,0BAAqB;UAAA,IAAlBgB,IAAkB,QAAlBA,IAAkB;UAAA,IAAZC,KAAY,QAAZA,KAAY;UAC7B,OACI,MAAC,gBAAD;YACI,OAAO,EAAE,mBAAM;cACX,OAAOC,KAAK,qBAAmBF,IAAI,CAACnB,IAAxB,CAAZ;YACH,CAHL;YAII,KAAK,EAAE;cACHsB,cAAc,EAAE,QADb;cAEHf,UAAU,EAAE;YAFT,CAJX;YAAA,WASI,KAAC,KAAD;cACI,KAAK,EAAE;gBACHgB,KAAK,EAAE,EADJ;gBAEHV,MAAM,EAAE,EAFL;gBAGHW,UAAU,EAAE,OAHT;gBAIHT,YAAY,EAAE,EAJX;gBAKHU,WAAW,EAAE,EALV;gBAMHpB,MAAM,EAAE;cANL,CADX;cASI,MAAM,EAAE;gBACJqB,GAAG,EAAEP,IAAI,CAACQ;cADN;YATZ,EATJ,EAsBI,KAAC,IAAD;cACI,KAAK,EAAE;gBACHC,KAAK,EAAE,OADJ;gBAEHC,QAAQ,EAAE3C,SAAS,CAAC4C,EAAV,GAAe;cAFtB,CADX;cAAA,UAMKX,IAAI,CAACnB;YANV,EAtBJ;UAAA,EADJ;QAiCH;MAxCL,EAPJ,EAmDI,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEa,MAAM,EAAE,CAAV;UAAaT,eAAe,EAAEnB,MAAM,CAAC2B;QAArC;MAAb,EAnDJ;IAAA,EAnCJ,EA6FK,KAAC,QAAD;MACG,IAAI,EAAEf,aAAa,EADtB;MAEG,YAAY,EAAE,sBAAAE,QAAQ;QAAA,OAAIA,QAAQ,CAACC,IAAb;MAAA,CAFzB;MAGG,UAAU,EAAE,2BAAqB;QAAA,IAAlBmB,IAAkB,SAAlBA,IAAkB;QAAA,IAAZC,KAAY,SAAZA,KAAY;QAC7B,OAAO,KAAC,QAAD;UACH,IAAI,EAAED,IADH;UAEH,OAAO,EAAE,mBAAM;YACXE,KAAK,4BAA0BF,IAAI,CAACnB,IAA/B,CAAL;UACH;QAJE,GACcoB,KADd,CAAP;MAMH;IAVJ,EA7FL;EAAA,EADJ;AA4GH;;AAED,eAAe/B,QAAf"},"metadata":{},"sourceType":"module"}