{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SafeAreaView } from 'react-navigation';\nimport { fontSizes } from \"../constants\";\nimport { convertDateTimeToString } from \"../util/DateTime\";\nimport { user as UserRepository, population as PopulationRepository } from \"../repositories\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Profile = function Profile() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      populations = _useState4[0],\n      setPopulations = _useState4[1];\n\n  var email = user.email,\n      dateOfBirth = user.dateOfBirth,\n      gender = user.gender,\n      userId = user.userId,\n      address = user.address,\n      username = user.username,\n      url = user.url,\n      registerDate = user.registerDate,\n      phone = user.phone;\n  var cars = [{\n    id: 1,\n    make: \"Make1\",\n    year: 2016,\n    color: \"black\"\n  }, {\n    id: 2,\n    make: \"Make2\",\n    year: 2006,\n    color: \"gray\"\n  }, {\n    id: 3,\n    make: \"Make3\",\n    year: 2012,\n    color: \"purple\"\n  }];\n  useEffect(function () {\n    UserRepository.getUserDetail().then(function (responseUser) {\n      return setUser(responseUser);\n    });\n    PopulationRepository.getPopulation({\n      drilldowns: 'Nation',\n      measures: 'Population'\n    }).then(function (responsePopulations) {\n      return setPopulations(responsePopulations);\n    });\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      paddingTop: 50,\n      paddingStart: 20\n    },\n    children: [_jsx(Image, {\n      style: {\n        width: 160,\n        height: 160,\n        resizeMode: 'cover',\n        borderRadius: 80,\n        alignSelf: 'center',\n        marginBottom: 20\n      },\n      source: {\n        uri: url\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Username: \"\n      }), _jsx(Text, {\n        children: username\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Email: \"\n      }), _jsx(Text, {\n        children: email\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"DOB: \"\n      }), _jsx(Text, {\n        children: convertDateTimeToString(dateOfBirth)\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Gender: \"\n      }), _jsx(Text, {\n        children: gender\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Address: \"\n      }), _jsx(Text, {\n        children: address\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Phone: \"\n      }), _jsx(Text, {\n        children: phone\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: fontSizes.h6\n        },\n        children: JSON.stringify(populations)\n      }), _jsx(Text, {\n        style: {\n          fontSize: fontSizes.h6\n        },\n        children: typeof populations\n      })]\n    })]\n  });\n};\n\nexport default Profile;","map":{"version":3,"names":["React","useEffect","useState","SafeAreaView","fontSizes","convertDateTimeToString","user","UserRepository","population","PopulationRepository","Profile","setUser","populations","setPopulations","email","dateOfBirth","gender","userId","address","username","url","registerDate","phone","cars","id","make","year","color","getUserDetail","then","responseUser","getPopulation","drilldowns","measures","responsePopulations","flex","paddingTop","paddingStart","width","height","resizeMode","borderRadius","alignSelf","marginBottom","uri","flexDirection","fontWeight","fontSize","h6","JSON","stringify"],"sources":["D:/React/react-native-project/training-app/screens/Profile.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    Text,\n    View,\n    Image,\n    Dimensions\n} from \"react-native\";\nimport { SafeAreaView } from 'react-navigation';\nimport {\n    LineChart,\n    BarChart,\n    PieChart,\n    ProgressChart,\n    ContributionGraph,\n    StackedBarChart\n} from \"react-native-chart-kit\";\nimport { images, colors, icons, fontSizes } from '../constants';\nimport { convertDateTimeToString } from '../util/DateTime';\nimport {\n    user as UserRepository,\n    population as PopulationRepository\n} from '../repositories';\n\n\n\nconst Profile = () => {\n    const [user, setUser] = useState({});\n    const [populations, setPopulations] = useState([]);\n    const { email, dateOfBirth, gender, userId, address, username, url, registerDate, phone } = user;\n    const cars = [\n        { id: 1, make: \"Make1\", year: 2016, color: \"black\" },\n        { id: 2, make: \"Make2\", year: 2006, color: \"gray\" },\n        { id: 3, make: \"Make3\", year: 2012, color: \"purple\" },\n    ];\n\n    useEffect(() => {\n        UserRepository.getUserDetail().then(responseUser => setUser(responseUser));\n        PopulationRepository.getPopulation({ drilldowns: 'Nation', measures: 'Population' })\n            .then(responsePopulations => setPopulations(responsePopulations));\n    }, []);\n    return (\n        <SafeAreaView style={{\n            flex: 1,\n            paddingTop: 50,\n            paddingStart: 20\n        }}>\n            <Image\n                style={{\n                    width: 160,\n                    height: 160,\n                    resizeMode: 'cover',\n                    borderRadius: 80,\n                    alignSelf: 'center',\n                    marginBottom: 20\n                }}\n                source={{\n                    uri: url\n                }}\n            />\n            <View style={{ flexDirection: 'row' }}>\n                <Text style={{ fontWeight: 'bold' }}>Username: </Text>\n                <Text>\n                    {username}\n                </Text>\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n                <Text style={{ fontWeight: 'bold' }}>Email: </Text>\n                <Text>\n                    {email}\n                </Text>\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n                <Text style={{ fontWeight: 'bold' }}>DOB: </Text>\n                <Text>\n                    {convertDateTimeToString(dateOfBirth)}\n                </Text>\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n                <Text style={{ fontWeight: 'bold' }}>Gender: </Text>\n                <Text>\n                    {gender}\n                </Text>\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n                <Text style={{ fontWeight: 'bold' }}>Address: </Text>\n                <Text>\n                    {address}\n                </Text>\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n                <Text style={{ fontWeight: 'bold' }}>Phone: </Text>\n                <Text>\n                    {phone}\n                </Text>\n            </View>\n            <View>\n                <Text style={{ fontSize: fontSizes.h6 }}>\n                    {JSON.stringify(populations)}\n                </Text>\n                <Text style={{ fontSize: fontSizes.h6 }}>\n                    {typeof (populations)}\n                </Text>\n            </View>\n            {/* <LineChart\n                data={{\n                    labels: populations.map(item => item.year),\n                    datasets: [\n                        {\n                            data: populations.map(item => item.population),\n                            color: (opacity = 1) => `rgba(134, 65, 244, ${opacity})`, // optional\n                            strokeWidth: 2 // optional\n                        }\n                    ],\n                    legend: [\"Rainy Days\"] // optional\n                }}\n                width={Dimensions.get(\"window\").width}\n                height={220}\n                chartConfig={{\n                    backgroundGradientFrom: \"white\",\n                    backgroundGradientFromOpacity: 0,\n                    backgroundGradientTo: \"white\",\n                    backgroundGradientToOpacity: 1,\n                    color: (opacity = 1) => colors.primary,\n                    strokeWidth: 2, // optional, default 3\n                    barPercentage: 0.5,\n                    useShadowColorFromDataset: false // optional\n                }}\n            /> */}\n        </SafeAreaView>\n    )\n}\n\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module"}