{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { colors, fontSizes, data } from \"../../constants\";\nimport FoodItem from \"./FoodItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction FoodList(props) {\n  var _useState = useState(data.foods),\n      _useState2 = _slicedToArray(_useState, 2),\n      foods = _useState2[0],\n      setFoods = _useState2[1];\n\n  var _useState3 = useState(data.categories),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categories = _useState4[0],\n      setCategories = _useState4[1];\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    children: [_jsx(View, {\n      style: {\n        height: 60\n      }\n    }), _jsxs(View, {\n      style: {\n        height: 100\n      },\n      children: [_jsx(View, {\n        style: {\n          height: 1,\n          backgroundColor: colors.inactive\n        }\n      }), _jsx(FlatList, {\n        horizontal: true,\n        data: categories,\n        keyExtractor: function keyExtractor(eachCatrgory) {\n          return eachCatrgory.name;\n        },\n        style: {\n          flex: 1\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return _jsxs(View, {\n            children: [_jsx(Image, {\n              style: {\n                width: 50,\n                height: 50,\n                resizeMode: 'cover',\n                borderRadius: 80,\n                marginRight: 15\n              },\n              source: {\n                uri: item.url\n              }\n            }), _jsx(Text, {\n              style: {\n                color: 'black',\n                fontSize: fontSizes.h6 * 0.6\n              },\n              children: item.name\n            })]\n          });\n        }\n      }), _jsx(View, {\n        style: {\n          height: 1,\n          backgroundColor: colors.inactive\n        }\n      })]\n    }), _jsx(FlatList, {\n      data: foods,\n      keyExtractor: function keyExtractor(eachFood) {\n        return eachFood.name;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsx(FoodItem, {\n          food: item,\n          onPress: function onPress() {\n            alert(\"You press item's name \" + item.name);\n          }\n        }, index);\n      }\n    })]\n  });\n}\n\nexport default FoodList;","map":{"version":3,"names":["React","useState","colors","fontSizes","data","FoodItem","FoodList","props","foods","setFoods","categories","setCategories","flex","backgroundColor","height","inactive","eachCatrgory","name","item","index","width","resizeMode","borderRadius","marginRight","uri","url","color","fontSize","h6","eachFood","alert"],"sources":["D:/React/react-native-project/training-app/screens/FoodList/FoodList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    Image,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    Keyboard,\r\n    ScrollView,\r\n    FlatList\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nimport { images, colors, icons, fontSizes, data } from '../../constants';\r\nimport { isValidEmail, isValidPassword } from '../../util/Validations';\r\nimport FoodItem from './FoodItem';\r\n\r\n// import data from '../../constants/data.json';\r\n\r\n/**\r\n * \r\n - Listview from map\r\n - Flatlist\r\n */\r\nfunction FoodList(props: any) {\r\n    const [foods, setFoods] = useState(data.foods);\r\n    const [categories, setCategories] = useState(data.categories);\r\n    return (\r\n        <View\r\n            style={{\r\n                flex: 1,\r\n                backgroundColor: 'white'\r\n            }}\r\n        >\r\n            <View style={{ height: 60 }} />\r\n            <View\r\n                style={{\r\n                    height: 100\r\n                }}\r\n            >\r\n                <View style={{ height: 1, backgroundColor: colors.inactive }} />\r\n\r\n                <FlatList\r\n                    horizontal={true}\r\n                    data={categories}\r\n                    keyExtractor={eachCatrgory => eachCatrgory.name}\r\n                    style={{ flex: 1 }}\r\n                    renderItem={({ item, index }) => {\r\n                        return (\r\n                            <View>\r\n                                <Image\r\n                                    style={{\r\n                                        width: 50,\r\n                                        height: 50,\r\n                                        resizeMode: 'cover',\r\n                                        borderRadius: 80,\r\n                                        marginRight: 15\r\n                                    }}\r\n                                    source={{\r\n                                        uri: item.url\r\n                                    }}\r\n                                />\r\n                                <Text\r\n                                    style={{\r\n                                        color: 'black',\r\n                                        fontSize: fontSizes.h6 * 0.6\r\n                                    }}\r\n                                >\r\n                                    {item.name}\r\n                                </Text>\r\n                            </View>\r\n                        )\r\n                    }}\r\n                >\r\n\r\n                </FlatList>\r\n                <View style={{ height: 1, backgroundColor: colors.inactive }} />\r\n            </View>\r\n            {/* <ScrollView>\r\n                {\r\n                    foods.map((eachFood: any, index: number) => <FoodItem key={index} he food={eachFood} />)\r\n                }\r\n            </ScrollView> */}\r\n            <FlatList\r\n                data={foods}\r\n                keyExtractor={eachFood => eachFood.name}\r\n                renderItem={({ item, index }) => {\r\n                    return <FoodItem\r\n                        food={item} key={index}\r\n                        onPress={() => {\r\n                            alert(`You press item's name ${item.name}`);\r\n                        }}\r\n                    />\r\n                }}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default FoodList"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAeA,SAAiBC,MAAjB,EAAgCC,SAAhC,EAA2CC,IAA3C;AAEA,OAAOC,QAAP;;;;AASA,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;EAC1B,gBAA0BN,QAAQ,CAACG,IAAI,CAACI,KAAN,CAAlC;EAAA;EAAA,IAAOA,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAoCR,QAAQ,CAACG,IAAI,CAACM,UAAN,CAA5C;EAAA;EAAA,IAAOA,UAAP;EAAA,IAAmBC,aAAnB;;EACA,OACI,MAAC,IAAD;IACI,KAAK,EAAE;MACHC,IAAI,EAAE,CADH;MAEHC,eAAe,EAAE;IAFd,CADX;IAAA,WAMI,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAV;IAAb,EANJ,EAOI,MAAC,IAAD;MACI,KAAK,EAAE;QACHA,MAAM,EAAE;MADL,CADX;MAAA,WAKI,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEA,MAAM,EAAE,CAAV;UAAaD,eAAe,EAAEX,MAAM,CAACa;QAArC;MAAb,EALJ,EAOI,KAAC,QAAD;QACI,UAAU,EAAE,IADhB;QAEI,IAAI,EAAEL,UAFV;QAGI,YAAY,EAAE,sBAAAM,YAAY;UAAA,OAAIA,YAAY,CAACC,IAAjB;QAAA,CAH9B;QAII,KAAK,EAAE;UAAEL,IAAI,EAAE;QAAR,CAJX;QAKI,UAAU,EAAE,0BAAqB;UAAA,IAAlBM,IAAkB,QAAlBA,IAAkB;UAAA,IAAZC,KAAY,QAAZA,KAAY;UAC7B,OACI,MAAC,IAAD;YAAA,WACI,KAAC,KAAD;cACI,KAAK,EAAE;gBACHC,KAAK,EAAE,EADJ;gBAEHN,MAAM,EAAE,EAFL;gBAGHO,UAAU,EAAE,OAHT;gBAIHC,YAAY,EAAE,EAJX;gBAKHC,WAAW,EAAE;cALV,CADX;cAQI,MAAM,EAAE;gBACJC,GAAG,EAAEN,IAAI,CAACO;cADN;YARZ,EADJ,EAaI,KAAC,IAAD;cACI,KAAK,EAAE;gBACHC,KAAK,EAAE,OADJ;gBAEHC,QAAQ,EAAExB,SAAS,CAACyB,EAAV,GAAe;cAFtB,CADX;cAAA,UAMKV,IAAI,CAACD;YANV,EAbJ;UAAA,EADJ;QAwBH;MA9BL,EAPJ,EAyCI,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEH,MAAM,EAAE,CAAV;UAAaD,eAAe,EAAEX,MAAM,CAACa;QAArC;MAAb,EAzCJ;IAAA,EAPJ,EAuDI,KAAC,QAAD;MACI,IAAI,EAAEP,KADV;MAEI,YAAY,EAAE,sBAAAqB,QAAQ;QAAA,OAAIA,QAAQ,CAACZ,IAAb;MAAA,CAF1B;MAGI,UAAU,EAAE,2BAAqB;QAAA,IAAlBC,IAAkB,SAAlBA,IAAkB;QAAA,IAAZC,KAAY,SAAZA,KAAY;QAC7B,OAAO,KAAC,QAAD;UACH,IAAI,EAAED,IADH;UAEH,OAAO,EAAE,mBAAM;YACXY,KAAK,4BAA0BZ,IAAI,CAACD,IAA/B,CAAL;UACH;QAJE,GACcE,KADd,CAAP;MAMH;IAVL,EAvDJ;EAAA,EADJ;AAsEH;;AAED,eAAeb,QAAf"},"metadata":{},"sourceType":"module"}