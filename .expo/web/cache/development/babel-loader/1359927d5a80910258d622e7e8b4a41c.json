{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { UIButton } from \"../components\";\nimport { colors, fontSizes, icons, images } from \"../constants\";\nimport { auth, firebaseDatabase, onAuthStateChanged, firebaseDatabaseRef, firebaseSet } from \"../firebase/firebase\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Welcome(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    name: 'Influencer',\n    isSelected: true\n  }, {\n    name: 'Business',\n    isSelected: false\n  }, {\n    name: 'Individual',\n    isSelected: false\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      accountTypes = _useState2[0],\n      setAccountType = _useState2[1];\n\n  useEffect(function () {\n    onAuthStateChanged(auth, function (responseUser) {\n      if (responseUser != null) {\n        var user = {\n          userId: responseUser.uid,\n          email: responseUser.email,\n          emailVerified: responseUser.emailVerified,\n          accessToken: responseUser.accessToken\n        };\n        firebaseSet(firebaseDatabaseRef(firebaseDatabase, \"users/\" + responseUser.uid), user);\n        AsyncStorage.setItem('user', JSON.stringify(user));\n        navigation.navigate('UITab');\n      } else {}\n    });\n  });\n  return _jsx(View, {\n    style: {\n      backgroundColor: 'white',\n      flex: 100\n    },\n    children: _jsxs(ImageBackground, {\n      source: images.background,\n      resizeMode: \"cover\",\n      style: {\n        flex: 100,\n        justifyContent: 'center'\n      },\n      children: [_jsx(View, {\n        style: {\n          flexDirection: 'row',\n          flex: 20,\n          marginTop: Platform.OS === 'ios' ? 40 : 0\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            height: 50,\n            flex: 1,\n            justifyContent: \"flex-start\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(Image, {\n            source: icons.fire,\n            style: {\n              width: 30,\n              height: 30,\n              marginStart: 10,\n              marginEnd: 5\n            }\n          }), _jsx(Text, {\n            style: {\n              color: \"#fff\"\n            },\n            children: \"YOURCOMPANY.CO\"\n          }), _jsx(View, {\n            style: {\n              flex: 1\n            }\n          }), _jsx(Icon, {\n            name: \"question-circle\",\n            size: 20,\n            color: \"white\",\n            style: {\n              marginEnd: 20\n            }\n          })]\n        })\n      }), _jsxs(View, {\n        style: {\n          flex: 20,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginBottom: 7,\n            color: '#fff',\n            fontSize: fontSizes.h6\n          },\n          children: \"Welcom to\"\n        }), _jsx(Text, {\n          style: {\n            marginBottom: 7,\n            color: '#fff',\n            fontWeight: 'bold',\n            fontSize: fontSizes.h5\n          },\n          children: \"COURCOMPANY.CO\"\n        }), _jsx(Text, {\n          style: {\n            marginBottom: 7,\n            color: '#fff',\n            fontSize: fontSizes.h6\n          },\n          children: \"Please select your account type\"\n        })]\n      }), _jsx(View, {\n        style: {\n          flex: 40\n        },\n        children: accountTypes.map(function (accountType, index, array) {\n          return _jsx(UIButton, {\n            isSelected: accountType.isSelected,\n            title: accountType.name,\n            onPress: function onPress() {\n              var newAccountTypes = accountTypes.map(function (eachAccountType) {\n                return _objectSpread(_objectSpread({}, eachAccountType), {}, {\n                  isSelected: eachAccountType.name == accountType.name\n                });\n              });\n              setAccountType(newAccountTypes);\n            }\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: {\n          flex: 20\n        },\n        children: [_jsx(UIButton, {\n          title: \"Login\".toLocaleUpperCase(),\n          isSelected: false,\n          onPress: function onPress() {\n            navigation.navigate('Login');\n          }\n        }), _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontSize: fontSizes.h6,\n            alignSelf: 'center'\n          },\n          children: \"Want to register new Account ?\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            padding: 5\n          },\n          onPress: function onPress() {\n            navigation.navigate('Register');\n          },\n          children: _jsx(Text, {\n            style: {\n              color: colors.primary,\n              fontSize: fontSizes.h6,\n              alignSelf: 'center',\n              textDecorationLine: 'underline'\n            },\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default Welcome;","map":{"version":3,"names":["React","useEffect","useState","Icon","UIButton","colors","fontSizes","icons","images","auth","firebaseDatabase","onAuthStateChanged","firebaseDatabaseRef","firebaseSet","AsyncStorage","Welcome","navigation","name","isSelected","accountTypes","setAccountType","responseUser","user","userId","uid","email","emailVerified","accessToken","setItem","JSON","stringify","navigate","backgroundColor","flex","background","justifyContent","flexDirection","marginTop","Platform","OS","height","alignItems","fire","width","marginStart","marginEnd","color","marginBottom","fontSize","h6","fontWeight","h5","map","accountType","index","array","newAccountTypes","eachAccountType","toLocaleUpperCase","alignSelf","padding","primary","textDecorationLine"],"sources":["D:/React/react-native-project/training-app/screens/Welcome.tsx"],"sourcesContent":["import { NativeStackHeaderProps } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Text, View, Image, ImageBackground, TouchableOpacity, Platform } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nimport { UIButton } from '../components';\r\nimport { colors, fontSizes, icons, images } from '../constants';\r\nimport {\r\n    auth,\r\n    firebaseDatabase,\r\n    onAuthStateChanged,\r\n    firebaseDatabaseRef,\r\n    firebaseSet\r\n} from '../firebase/firebase'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nfunction Welcome({ navigation }: NativeStackHeaderProps) {\r\n    // let accountTypes = [\r\n    //     'Influencer', 'Business', 'Individual'\r\n    // ];\r\n\r\n    const [accountTypes, setAccountType] = useState([\r\n        {\r\n            name: 'Influencer',\r\n            isSelected: true\r\n        },\r\n        {\r\n            name: 'Business',\r\n            isSelected: false\r\n        },\r\n        {\r\n            name: 'Individual',\r\n            isSelected: false\r\n        }\r\n    ])\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (responseUser) => {\r\n            if (responseUser != null) {\r\n                //sign in\r\n                //Save to firebase\r\n                let user = {\r\n                    userId: responseUser.uid,\r\n                    email: responseUser.email,\r\n                    emailVerified: responseUser.emailVerified,\r\n                    accessToken: responseUser.accessToken\r\n                }\r\n\r\n                firebaseSet(firebaseDatabaseRef(\r\n                    firebaseDatabase,\r\n                    `users/${responseUser.uid}`\r\n                ), user)\r\n\r\n\r\n                //Save to local stoage\r\n                AsyncStorage.setItem('user', JSON.stringify(user));\r\n                navigation.navigate('UITab');\r\n            } else {\r\n                //signout\r\n            }\r\n        })\r\n    });\r\n    return (\r\n        <View style={{\r\n            backgroundColor: 'white',\r\n            flex: 100\r\n        }}>\r\n            <ImageBackground\r\n                source={images.background}\r\n                resizeMode='cover'\r\n                style={{\r\n                    flex: 100,\r\n                    justifyContent: 'center'\r\n                }}\r\n\r\n            >\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        flex: 20,\r\n                        marginTop: Platform.OS === 'ios' ? 40 : 0\r\n                    }}\r\n                >\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            height: 50,\r\n                            flex: 1,\r\n                            justifyContent: \"flex-start\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                        <Image\r\n                            source={icons.fire}\r\n                            style={{\r\n                                width: 30,\r\n                                height: 30,\r\n                                marginStart: 10,\r\n                                marginEnd: 5\r\n                            }}\r\n                        />\r\n                        <Text\r\n                            style={{\r\n                                color: \"#fff\"\r\n                            }}\r\n                        >\r\n                            YOURCOMPANY.CO\r\n                        </Text>\r\n                        <View style={{ flex: 1 }}></View>\r\n                        {/* <Image\r\n                            source={icons.question}\r\n                            style={{\r\n                                width: 20,\r\n                                height: 20,\r\n                                marginEnd: 10,\r\n                                tintColor: \"#fff\"\r\n                            }}\r\n                        /> */}\r\n                        <Icon\r\n                            name='question-circle'\r\n                            size={20}\r\n                            color='white'\r\n                            style={{\r\n                                marginEnd: 20\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View\r\n                    style={{\r\n                        flex: 20,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    <Text\r\n                        style={{\r\n                            marginBottom: 7,\r\n                            color: '#fff',\r\n                            fontSize: fontSizes.h6\r\n                        }}\r\n                    >\r\n                        Welcom to\r\n                    </Text>\r\n                    <Text\r\n                        style={{\r\n                            marginBottom: 7,\r\n                            color: '#fff',\r\n                            fontWeight: 'bold',\r\n                            fontSize: fontSizes.h5\r\n                        }}\r\n                    >\r\n                        COURCOMPANY.CO\r\n                    </Text>\r\n                    <Text\r\n                        style={{\r\n                            marginBottom: 7,\r\n                            color: '#fff',\r\n                            fontSize: fontSizes.h6\r\n                        }}\r\n                    >\r\n                        Please select your account type\r\n                    </Text>\r\n                </View>\r\n                <View\r\n                    style={{\r\n                        flex: 40,\r\n                    }}\r\n                >\r\n                    {accountTypes.map((accountType, index, array) => {\r\n                        return (\r\n                            <UIButton\r\n                                key={index}\r\n                                isSelected={accountType.isSelected}\r\n                                title={accountType.name}\r\n                                onPress={() => {\r\n                                    let newAccountTypes = accountTypes.map((eachAccountType) => {\r\n                                        return { ...eachAccountType, isSelected: eachAccountType.name == accountType.name }\r\n                                    })\r\n                                    setAccountType(newAccountTypes);\r\n                                }}\r\n                            />\r\n                        )\r\n                    })}\r\n                </View>\r\n                <View\r\n                    style={{\r\n                        flex: 20\r\n                    }}\r\n                >\r\n                    <UIButton\r\n                        title={\"Login\".toLocaleUpperCase()}\r\n                        isSelected={false}\r\n                        onPress={() => {\r\n                            navigation.navigate('Login');\r\n                        }}\r\n                    />\r\n                    <Text\r\n                        style={{\r\n                            color: \"white\",\r\n                            fontSize: fontSizes.h6,\r\n                            alignSelf: 'center'\r\n                        }}\r\n                    >\r\n                        Want to register new Account ?\r\n                    </Text>\r\n                    <TouchableOpacity\r\n                        style={{\r\n                            padding: 5\r\n                        }}\r\n                        onPress={() => {\r\n                            navigation.navigate('Register');\r\n                        }}\r\n                    >\r\n                        <Text\r\n                            style={{\r\n                                color: colors.primary,\r\n                                fontSize: fontSizes.h6,\r\n                                alignSelf: 'center',\r\n                                textDecorationLine: 'underline',\r\n                            }}\r\n                        >\r\n                            Register\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Welcome"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,IAAP;AACA,SAASC,QAAT;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,MAAnC;AACA,SACIC,IADJ,EAEIC,gBAFJ,EAGIC,kBAHJ,EAIIC,mBAJJ,EAKIC,WALJ;AAOA,OAAOC,YAAP,MAAyB,2CAAzB;;;;AACA,SAASC,OAAT,OAAyD;EAAA,IAAtCC,UAAsC,QAAtCA,UAAsC;;EAKrD,gBAAuCd,QAAQ,CAAC,CAC5C;IACIe,IAAI,EAAE,YADV;IAEIC,UAAU,EAAE;EAFhB,CAD4C,EAK5C;IACID,IAAI,EAAE,UADV;IAEIC,UAAU,EAAE;EAFhB,CAL4C,EAS5C;IACID,IAAI,EAAE,YADV;IAEIC,UAAU,EAAE;EAFhB,CAT4C,CAAD,CAA/C;EAAA;EAAA,IAAOC,YAAP;EAAA,IAAqBC,cAArB;;EAeAnB,SAAS,CAAC,YAAM;IACZU,kBAAkB,CAACF,IAAD,EAAO,UAACY,YAAD,EAAkB;MACvC,IAAIA,YAAY,IAAI,IAApB,EAA0B;QAGtB,IAAIC,IAAI,GAAG;UACPC,MAAM,EAAEF,YAAY,CAACG,GADd;UAEPC,KAAK,EAAEJ,YAAY,CAACI,KAFb;UAGPC,aAAa,EAAEL,YAAY,CAACK,aAHrB;UAIPC,WAAW,EAAEN,YAAY,CAACM;QAJnB,CAAX;QAOAd,WAAW,CAACD,mBAAmB,CAC3BF,gBAD2B,aAElBW,YAAY,CAACG,GAFK,CAApB,EAGRF,IAHQ,CAAX;QAOAR,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAA7B;QACAN,UAAU,CAACe,QAAX,CAAoB,OAApB;MACH,CAnBD,MAmBO,CAEN;IACJ,CAvBiB,CAAlB;EAwBH,CAzBQ,CAAT;EA0BA,OACI,KAAC,IAAD;IAAM,KAAK,EAAE;MACTC,eAAe,EAAE,OADR;MAETC,IAAI,EAAE;IAFG,CAAb;IAAA,UAII,MAAC,eAAD;MACI,MAAM,EAAEzB,MAAM,CAAC0B,UADnB;MAEI,UAAU,EAAC,OAFf;MAGI,KAAK,EAAE;QACHD,IAAI,EAAE,GADH;QAEHE,cAAc,EAAE;MAFb,CAHX;MAAA,WASI,KAAC,IAAD;QACI,KAAK,EAAE;UACHC,aAAa,EAAE,KADZ;UAEHH,IAAI,EAAE,EAFH;UAGHI,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;QAHrC,CADX;QAAA,UAOI,MAAC,IAAD;UACI,KAAK,EAAE;YACHH,aAAa,EAAE,KADZ;YAEHI,MAAM,EAAE,EAFL;YAGHP,IAAI,EAAE,CAHH;YAIHE,cAAc,EAAE,YAJb;YAKHM,UAAU,EAAE;UALT,CADX;UAAA,WASI,KAAC,KAAD;YACI,MAAM,EAAElC,KAAK,CAACmC,IADlB;YAEI,KAAK,EAAE;cACHC,KAAK,EAAE,EADJ;cAEHH,MAAM,EAAE,EAFL;cAGHI,WAAW,EAAE,EAHV;cAIHC,SAAS,EAAE;YAJR;UAFX,EATJ,EAkBI,KAAC,IAAD;YACI,KAAK,EAAE;cACHC,KAAK,EAAE;YADJ,CADX;YAAA;UAAA,EAlBJ,EAyBI,KAAC,IAAD;YAAM,KAAK,EAAE;cAAEb,IAAI,EAAE;YAAR;UAAb,EAzBJ,EAmCI,KAAC,IAAD;YACI,IAAI,EAAC,iBADT;YAEI,IAAI,EAAE,EAFV;YAGI,KAAK,EAAC,OAHV;YAII,KAAK,EAAE;cACHY,SAAS,EAAE;YADR;UAJX,EAnCJ;QAAA;MAPJ,EATJ,EA6DI,MAAC,IAAD;QACI,KAAK,EAAE;UACHZ,IAAI,EAAE,EADH;UAEHE,cAAc,EAAE,QAFb;UAGHM,UAAU,EAAE;QAHT,CADX;QAAA,WAOI,KAAC,IAAD;UACI,KAAK,EAAE;YACHM,YAAY,EAAE,CADX;YAEHD,KAAK,EAAE,MAFJ;YAGHE,QAAQ,EAAE1C,SAAS,CAAC2C;UAHjB,CADX;UAAA;QAAA,EAPJ,EAgBI,KAAC,IAAD;UACI,KAAK,EAAE;YACHF,YAAY,EAAE,CADX;YAEHD,KAAK,EAAE,MAFJ;YAGHI,UAAU,EAAE,MAHT;YAIHF,QAAQ,EAAE1C,SAAS,CAAC6C;UAJjB,CADX;UAAA;QAAA,EAhBJ,EA0BI,KAAC,IAAD;UACI,KAAK,EAAE;YACHJ,YAAY,EAAE,CADX;YAEHD,KAAK,EAAE,MAFJ;YAGHE,QAAQ,EAAE1C,SAAS,CAAC2C;UAHjB,CADX;UAAA;QAAA,EA1BJ;MAAA,EA7DJ,EAiGI,KAAC,IAAD;QACI,KAAK,EAAE;UACHhB,IAAI,EAAE;QADH,CADX;QAAA,UAKKd,YAAY,CAACiC,GAAb,CAAiB,UAACC,WAAD,EAAcC,KAAd,EAAqBC,KAArB,EAA+B;UAC7C,OACI,KAAC,QAAD;YAEI,UAAU,EAAEF,WAAW,CAACnC,UAF5B;YAGI,KAAK,EAAEmC,WAAW,CAACpC,IAHvB;YAII,OAAO,EAAE,mBAAM;cACX,IAAIuC,eAAe,GAAGrC,YAAY,CAACiC,GAAb,CAAiB,UAACK,eAAD,EAAqB;gBACxD,uCAAYA,eAAZ;kBAA6BvC,UAAU,EAAEuC,eAAe,CAACxC,IAAhB,IAAwBoC,WAAW,CAACpC;gBAA7E;cACH,CAFqB,CAAtB;cAGAG,cAAc,CAACoC,eAAD,CAAd;YACH;UATL,GACSF,KADT,CADJ;QAaH,CAdA;MALL,EAjGJ,EAsHI,MAAC,IAAD;QACI,KAAK,EAAE;UACHrB,IAAI,EAAE;QADH,CADX;QAAA,WAKI,KAAC,QAAD;UACI,KAAK,EAAE,QAAQyB,iBAAR,EADX;UAEI,UAAU,EAAE,KAFhB;UAGI,OAAO,EAAE,mBAAM;YACX1C,UAAU,CAACe,QAAX,CAAoB,OAApB;UACH;QALL,EALJ,EAYI,KAAC,IAAD;UACI,KAAK,EAAE;YACHe,KAAK,EAAE,OADJ;YAEHE,QAAQ,EAAE1C,SAAS,CAAC2C,EAFjB;YAGHU,SAAS,EAAE;UAHR,CADX;UAAA;QAAA,EAZJ,EAqBI,KAAC,gBAAD;UACI,KAAK,EAAE;YACHC,OAAO,EAAE;UADN,CADX;UAII,OAAO,EAAE,mBAAM;YACX5C,UAAU,CAACe,QAAX,CAAoB,UAApB;UACH,CANL;UAAA,UAQI,KAAC,IAAD;YACI,KAAK,EAAE;cACHe,KAAK,EAAEzC,MAAM,CAACwD,OADX;cAEHb,QAAQ,EAAE1C,SAAS,CAAC2C,EAFjB;cAGHU,SAAS,EAAE,QAHR;cAIHG,kBAAkB,EAAE;YAJjB,CADX;YAAA;UAAA;QARJ,EArBJ;MAAA,EAtHJ;IAAA;EAJJ,EADJ;AAuKH;;AAED,eAAe/C,OAAf"},"metadata":{},"sourceType":"module"}