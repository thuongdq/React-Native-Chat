{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { colors, fontSizes, dataProducts } from \"../../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ProductGridView(props) {\n  var _useState = useState(dataProducts.products),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    children: _jsx(FlatList, {\n      style: {\n        marginTop: 5\n      },\n      keyExtractor: function keyExtractor(eachProduct) {\n        return eachProduct.productName;\n      },\n      data: products,\n      numColumns: 2,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsxs(View, {\n          style: {\n            flex: 0.5,\n            height: 200,\n            marginLeft: index % 2 == 0 ? 10 : 0,\n            marginRight: 10,\n            marginTop: 5,\n            marginBottom: 5,\n            borderRadius: 20,\n            borderWidth: 1,\n            borderColor: colors.inactive\n          },\n          children: [_jsxs(View, {\n            style: {\n              marginTop: 10,\n              flexDirection: 'row'\n            },\n            children: [_jsx(Image, {\n              style: {\n                width: 100,\n                height: 100,\n                resizeMode: 'cover',\n                borderRadius: 20,\n                marginRight: 15\n              },\n              source: {\n                uri: item.url\n              }\n            }), _jsxs(Text, {\n              style: {\n                color: 'black',\n                fontSize: fontSizes.h6\n              },\n              children: [\"$ \", item.price]\n            })]\n          }), _jsx(Text, {\n            style: {\n              color: colors.primary,\n              fontWeight: 'bold',\n              fontSize: fontSizes.h5,\n              marginHorizontal: 10\n            },\n            children: item.productName\n          })]\n        });\n      }\n    })\n  });\n}\n\nexport default ProductGridView;","map":{"version":3,"names":["React","useState","colors","fontSizes","dataProducts","ProductGridView","props","products","setProducts","flex","backgroundColor","marginTop","eachProduct","productName","item","index","height","marginLeft","marginRight","marginBottom","borderRadius","borderWidth","borderColor","inactive","flexDirection","width","resizeMode","uri","url","color","fontSize","h6","price","primary","fontWeight","h5","marginHorizontal"],"sources":["D:/React/react-native-project/training-app/screens/ProductGrid/ProductGridView.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    Image,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    ScrollView,\r\n    FlatList\r\n} from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nimport { images, colors, icons, fontSizes, dataProducts } from '../../constants';\r\nimport { isValidEmail, isValidPassword } from '../../util/Validations';\r\n\r\nfunction ProductGridView(props: any) {\r\n    const [products, setProducts] = useState(dataProducts.products);\r\n    return (\r\n        <View\r\n            style={{\r\n                flex: 1,\r\n                backgroundColor: 'white'\r\n            }}\r\n        >\r\n            <FlatList\r\n                style={{ marginTop: 5 }}\r\n                keyExtractor={(eachProduct) => eachProduct.productName}\r\n                data={products}\r\n                numColumns={2}\r\n                renderItem={({ item, index }) => {\r\n                    return (\r\n                        <View\r\n                            style={{\r\n                                flex: 0.5,\r\n                                height: 200,\r\n                                marginLeft: index % 2 == 0 ? 10 : 0,\r\n                                marginRight: 10,\r\n                                marginTop: 5,\r\n                                marginBottom: 5,\r\n                                borderRadius: 20,\r\n                                borderWidth: 1,\r\n                                borderColor: colors.inactive\r\n                            }}\r\n                        >\r\n                            <View\r\n                                style={{\r\n                                    marginTop: 10,\r\n                                    flexDirection: 'row'\r\n                                }}>\r\n                                <Image\r\n                                    style={{\r\n                                        width: 100,\r\n                                        height: 100,\r\n                                        resizeMode: 'cover',\r\n                                        borderRadius: 20,\r\n                                        marginRight: 15\r\n                                    }}\r\n                                    source={{\r\n                                        uri: item.url\r\n                                    }}\r\n                                />\r\n                                <Text\r\n                                    style={{\r\n                                        color: 'black',\r\n                                        fontSize: fontSizes.h6\r\n                                    }}\r\n                                >\r\n                                    $ {item.price}\r\n                                </Text>\r\n                            </View>\r\n                            <Text\r\n                                style={{\r\n                                    color: colors.primary,\r\n                                    fontWeight: 'bold',\r\n                                    fontSize: fontSizes.h5,\r\n                                    marginHorizontal: 10\r\n                                }}\r\n                            >\r\n                                {item.productName}\r\n                            </Text>\r\n                        </View>\r\n                    )\r\n                }}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ProductGridView;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAYA,SAAiBC,MAAjB,EAAgCC,SAAhC,EAA2CC,YAA3C;;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;EACjC,gBAAgCL,QAAQ,CAACG,YAAY,CAACG,QAAd,CAAxC;EAAA;EAAA,IAAOA,QAAP;EAAA,IAAiBC,WAAjB;;EACA,OACI,KAAC,IAAD;IACI,KAAK,EAAE;MACHC,IAAI,EAAE,CADH;MAEHC,eAAe,EAAE;IAFd,CADX;IAAA,UAMI,KAAC,QAAD;MACI,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAb,CADX;MAEI,YAAY,EAAE,sBAACC,WAAD;QAAA,OAAiBA,WAAW,CAACC,WAA7B;MAAA,CAFlB;MAGI,IAAI,EAAEN,QAHV;MAII,UAAU,EAAE,CAJhB;MAKI,UAAU,EAAE,0BAAqB;QAAA,IAAlBO,IAAkB,QAAlBA,IAAkB;QAAA,IAAZC,KAAY,QAAZA,KAAY;QAC7B,OACI,MAAC,IAAD;UACI,KAAK,EAAE;YACHN,IAAI,EAAE,GADH;YAEHO,MAAM,EAAE,GAFL;YAGHC,UAAU,EAAEF,KAAK,GAAG,CAAR,IAAa,CAAb,GAAiB,EAAjB,GAAsB,CAH/B;YAIHG,WAAW,EAAE,EAJV;YAKHP,SAAS,EAAE,CALR;YAMHQ,YAAY,EAAE,CANX;YAOHC,YAAY,EAAE,EAPX;YAQHC,WAAW,EAAE,CARV;YASHC,WAAW,EAAEpB,MAAM,CAACqB;UATjB,CADX;UAAA,WAaI,MAAC,IAAD;YACI,KAAK,EAAE;cACHZ,SAAS,EAAE,EADR;cAEHa,aAAa,EAAE;YAFZ,CADX;YAAA,WAKI,KAAC,KAAD;cACI,KAAK,EAAE;gBACHC,KAAK,EAAE,GADJ;gBAEHT,MAAM,EAAE,GAFL;gBAGHU,UAAU,EAAE,OAHT;gBAIHN,YAAY,EAAE,EAJX;gBAKHF,WAAW,EAAE;cALV,CADX;cAQI,MAAM,EAAE;gBACJS,GAAG,EAAEb,IAAI,CAACc;cADN;YARZ,EALJ,EAiBI,MAAC,IAAD;cACI,KAAK,EAAE;gBACHC,KAAK,EAAE,OADJ;gBAEHC,QAAQ,EAAE3B,SAAS,CAAC4B;cAFjB,CADX;cAAA,iBAMOjB,IAAI,CAACkB,KANZ;YAAA,EAjBJ;UAAA,EAbJ,EAuCI,KAAC,IAAD;YACI,KAAK,EAAE;cACHH,KAAK,EAAE3B,MAAM,CAAC+B,OADX;cAEHC,UAAU,EAAE,MAFT;cAGHJ,QAAQ,EAAE3B,SAAS,CAACgC,EAHjB;cAIHC,gBAAgB,EAAE;YAJf,CADX;YAAA,UAQKtB,IAAI,CAACD;UARV,EAvCJ;QAAA,EADJ;MAoDH;IA1DL;EANJ,EADJ;AAqEH;;AAED,eAAeR,eAAf"},"metadata":{},"sourceType":"module"}